@using Ada.Core.ViewModel
@model Ada.Core.ViewModel.Content.ArticleView
@{
    List<TreeView> treeViews = ViewBag.Trees;
}
@helper Tree(List<TreeView> trees,string id)
{
if (trees.Any(d=>d.ParentId==id))
{
    foreach (var item in trees.Where(d=>d.ParentId==id))
    {
            var isSelect = Model.ColumnId == item.Id ? "selected='selected'" : "";
            <option value="@item.Id" parent="@item.ParentId" @isSelect>@item.Text</option>
            @Tree(item.Children,item.Id)
        }
    }
}

<div class="row">
    <div class="col-lg-12">
        <div class="ibox-title">
            <a class="btn btn-outline btn-default btn-sm" href="javascript:goBackOrClose();"><i class="fa fa-reply"></i> 返回</a>
            <button class="btn btn-primary btn-sm" type="submit"><i class="fa fa-floppy-o"></i> 保存</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="tabs-container">
            <p class="bg-danger">@Html.ValidationMessage("message") </p>
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#tab-1"> 基本信息</a></li>
                <li class=""><a data-toggle="tab" href="#tab-2"> 文章内容</a></li>
            </ul>
            <div class="tab-content">
                <div id="tab-1" class="tab-pane active">
                    <div class="panel-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(d => d.ColumnId, Html.DisplayNameFor(d => d.ColumnId).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <select id="ColumnId" name="ColumnId" class="form-control" required="">
                                        <option value="" parent="0">请选择栏目</option>
                                        @Tree(treeViews, null)
                                    </select>
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Title, Html.DisplayNameFor(d => d.Title).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.Title, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Summary, Html.DisplayNameFor(d => d.Summary).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.Summary, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Url, Html.DisplayNameFor(d => d.Url).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.Url, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.CoverPic, Html.DisplayNameFor(d => d.CoverPic).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @{
                                        var isAvatar = string.IsNullOrWhiteSpace(Model.CoverPic) ? "fileinput-new" : "fileinput-exists";
                                    }
                                    <div class="fileinput @isAvatar" data-provides="fileinput">
                                        <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;">
                                            @if (!string.IsNullOrWhiteSpace(Model.CoverPic))
                                            {
                                                <img src="@Model.CoverPic" />
                                            }
                                        </div>
                                        <div>
                                            <span class="btn btn-success btn-sm btn-file">
                                                <span class="fileinput-new">选择图片</span><span class="fileinput-exists">更换图片</span>
                                                <input type="file" name="CoverPic">
                                            </span>
                                            <a href="#" class="btn btn-warning btn-sm fileinput-exists" data-dismiss="fileinput">移除图片</a>
                                        </div>
                                    </div>


                                </div>
                            </div>

                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">文章属性</label>
                                <div class="col-sm-10">
                                    @{
                                        var isCheckedIsSlide = Model.IsSlide == true ? "checked=''" : "";
                                        var isCheckedIsPush = Model.IsPush == true ? "checked=''" : "";
                                        var isCheckedIsRecommend = Model.IsRecommend == true ? "checked=''" : "";
                                        var isCheckedIsTop = Model.IsTop == true ? "checked=''" : "";
                                        var isCheckedIsHot = Model.IsHot == true ? "checked=''" : "";
                                    }
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.IsSlide)" name="@Html.IdFor(d => d.IsSlide)" value="true" @isCheckedIsSlide>
                                        <label for="@Html.IdFor(d => d.IsSlide)"> 轮播 </label>
                                    </div>
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.IsPush)" name="@Html.IdFor(d => d.IsPush)" value="true" @isCheckedIsPush>
                                        <label for="@Html.IdFor(d => d.IsPush)"> 推送 </label>
                                    </div>
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.IsRecommend)" name="@Html.IdFor(d => d.IsRecommend)" value="true" @isCheckedIsRecommend>
                                        <label for="@Html.IdFor(d => d.IsRecommend)"> 推荐 </label>
                                    </div>
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.IsTop)" name="@Html.IdFor(d => d.IsTop)" value="true" @isCheckedIsTop>
                                        <label for="@Html.IdFor(d => d.IsTop)"> 置首 </label>
                                    </div>
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.IsHot)" name="@Html.IdFor(d => d.IsHot)" value="true" @isCheckedIsHot>
                                        <label for="@Html.IdFor(d => d.IsHot)"> 热门 </label>
                                    </div>
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Taxis, Html.DisplayNameFor(d => d.Taxis).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.Taxis, new { @class = "form-control", required = "", type = "number" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">发布状态</label>
                                <div class="col-sm-10">
                                    @{
                                        var isCheckedIsStatus = Model.Status == 1 ? "checked=''" : "";
                                    }
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.Status)" name="@Html.IdFor(d => d.Status)" value="1" @isCheckedIsStatus>
                                        <label for="@Html.IdFor(d => d.Status)"> 发布 </label>
                                    </div>
                                </div>
                            </div>
                            @Html.HiddenFor(d => d.Id)

                        </div>

                    </div>
                </div>
                <div id="tab-2" class="tab-pane">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.TextAreaFor(d => d.Content, new { @class = "form-control summernote" })
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
        </div>

    </div>
</div>




@*<div class="row">
    <div class="col-lg-12">
        <div class="ibox">
            <div class="ibox-title">
                <a class="btn btn-outline btn-default btn-sm" href="javascript:goBackOrClose();"><i class="fa fa-reply"></i> 返回</a>
                <button class="btn btn-primary btn-sm" type="submit"><i class="fa fa-floppy-o"></i> 保存</button>
            </div>
            <div class="ibox-content">
                <div class="sk-spinner sk-spinner-wave">
                    <div class="sk-rect2"></div>
                    <div class="sk-rect3"></div>
                    <div class="sk-rect4"></div>
                    <div class="sk-rect5"></div>
                </div>
                <div class="form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(d => d.ColumnId, Html.DisplayNameFor(d => d.ColumnId).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            <select id="ColumnId" name="ColumnId" class="form-control" required = "">
                                <option value="" parent="0">请选择栏目</option>
                                @Tree(treeViews, null)
                              </select>
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        @Html.LabelFor(d => d.Title, Html.DisplayNameFor(d => d.Title).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.Title, new {@class = "form-control", required = ""})
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        @Html.LabelFor(d => d.Summary, Html.DisplayNameFor(d => d.Summary).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.Summary, new {@class = "form-control"})
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        @Html.LabelFor(d => d.Url, Html.DisplayNameFor(d => d.Url).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.Url, new {@class = "form-control"})
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        @Html.LabelFor(d => d.CoverPic, Html.DisplayNameFor(d => d.CoverPic).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @{
                                var isAvatar = string.IsNullOrWhiteSpace(Model.CoverPic) ? "fileinput-new" : "fileinput-exists";
                            }
                            <div class="fileinput @isAvatar" data-provides="fileinput">
                                <div class="fileinput-preview thumbnail" data-trigger="fileinput" style="width: 200px; height: 150px;">
                                    @if (!string.IsNullOrWhiteSpace(Model.CoverPic))
                                    {
                                        <img src="@Model.CoverPic"/>
                                    }
                                </div>
                                <div>
                                    <span class="btn btn-success btn-sm btn-file">
                                        <span class="fileinput-new">选择图片</span><span class="fileinput-exists">更换图片</span>
                                        <input type="file" name="CoverPic">
                                    </span>
                                    <a href="#" class="btn btn-warning btn-sm fileinput-exists" data-dismiss="fileinput">移除图片</a>
                                </div>
                            </div>


                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        @Html.LabelFor(d => d.Content, Html.DisplayNameFor(d => d.Content).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @Html.TextAreaFor(d => d.Content, new {@class = "form-control"})
                        </div>
                    </div>
                    <div class="hr-line-dashed"></div>
                    <div class="form-group">
                        @Html.LabelFor(d => d.Taxis, Html.DisplayNameFor(d => d.Taxis).ToString(), new {@class = "col-sm-2 control-label"})
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.Taxis, new {@class = "form-control", required = "",type="number"})
                        </div>
                    </div>
                    @Html.HiddenFor(d => d.Id)
                   
                </div>
            </div>
        </div>
    </div>
</div>*@


