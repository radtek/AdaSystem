
@using System.Web.Optimization
@using Ada.Core.Infrastructure
@using Ada.Services.Admin
@model Ada.Core.ViewModel.Purchase.PurchaseOrderDetailView
@{
    ViewBag.Title = "媒介订单";
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    var purchaseStatus = fieldService.GetFieldsByKey("PurchaseStatus").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox collapsed">
        <div class="ibox-title">
            <h5>高级筛选</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            <form id="searchFrm" onSubmit="javascript:searchFrm.search(this,event);">
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.LinkManName, Html.DisplayNameFor(d => d.LinkManName) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.LinkManName, new { @class = "form-control input-sm" })
                        </div>
                    </div>


                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.MediaTypeName, Html.DisplayNameFor(d => d.MediaTypeName) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.MediaTypeName, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.MediaName, Html.DisplayNameFor(d => d.MediaName) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.MediaName, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.Status, Html.DisplayNameFor(d => d.Status) + "：", new { @class = "control-label" })
                            @Html.DropDownListFor(d => d.Status, purchaseStatus, "请选择", new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.PublishDateStartEnd, Html.DisplayNameFor(d => d.PublishDateStartEnd) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.PublishDateStartEnd, new { @class = "form-control input-sm", @readonly = "" })
                            @Html.HiddenFor(d => d.PublishDateStart)
                            @Html.HiddenFor(d => d.PublishDateEnd)
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.BusinessRemark, Html.DisplayNameFor(d => d.BusinessRemark) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.BusinessRemark, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.BusinessBy, Html.DisplayNameFor(d => d.BusinessBy) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.BusinessBy, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.Transactor, Html.DisplayNameFor(d => d.Transactor) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.Transactor, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="row">
                    <div class="col-sm-12 text-center">
                        <div class="form-group">
                            <button class="btn btn-primary" type="submit"><i class="fa fa-search"></i> 搜索</button>
                            <button class="btn btn-warning" type="button" id="btn_reset"><i class="fa fa-repeat"></i> 重置</button>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="toolbar" class="btn-group">
    <button class="btn btn-primary btn-outline" onclick="editOrder();">
        <i class="fa fa-pencil"></i> 改价
    </button>
</div>

@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")
    @Styles.Render("~/plugins/dateRangeStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")
    @Scripts.Render("~/plugins/dateRange")

<script type="text/javascript">

        $(document).ready(function () {
            var table = new TableInit();
            table.Init();
            //2.初始化Button的点击事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();
            var $datepicker = $('#PublishDateStartEnd');
            $datepicker.daterangepicker({
                    autoUpdateInput: false,
                    opens: "center",
                    linkedCalendars: false,
                    locale: {
                        format: 'YYYY-MM-DD',
                        separator: " 至 ",
                        applyLabel: "确认",
                        cancelLabel: "取消",
                        fromLabel: "从",
                        toLabel: "到",
                        customRangeLabel: "自定义",
                        weekLabel: "周",
                        daysOfWeek: [
                            "日",
                            "一",
                            "二",
                            "三",
                            "四",
                            "五",
                            "六"
                        ],
                        monthNames: [
                            "一月",
                            "二月",
                            "三月",
                            "四月",
                            "五月",
                            "六月",
                            "七月",
                            "八月",
                            "九月",
                            "十月",
                            "十一月",
                            "十二月"
                        ],
                        firstDay: 1
                    }
                },
                function(start,end,label) {
                    $("#PublishDateStart").val(start.format('YYYY-MM-DD'));
                    $("#PublishDateEnd").val(end.format('YYYY-MM-DD'));
                });

            $datepicker.on('apply.daterangepicker', function(ev, picker) {
                $(this).val(picker.startDate.format('YYYY-MM-DD') + ' 至 ' + picker.endDate.format('YYYY-MM-DD'));
            });
            $datepicker.on('cancel.daterangepicker', function(ev, picker) {
                $(this).val('');
                resetDate();
            });
        });
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                url: '@Url.Action("GetList")',         //请求后台的URL（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                classes: "table table-no-bordered",
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                sortName: "Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                //detailView: true,                   //设置为 true 可以显示详细页面模式。
                //detailFormatter: detailFormatter,
                formatSearch: function() {
                    return "@Html.DisplayNameFor(d => d.MediaName)";
                },
                queryParams: searchFrm.queryParams,
                mobileResponsive: true,
                onLoadSuccess: initTooltip,
                columns: [
                    {
                        checkbox: true
                    },
                    {
                        field: 'Status',
                        title: '@Html.DisplayNameFor(d=>d.Status)',
                        align: "center", valign: "middle",
                        formatter: formatter.purchaseStatus
                    },
                    {
                        field: 'IsPayment',
                        title: '@Html.DisplayNameFor(d=>d.IsPayment)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                            if (value) {
                                return "<span class='label label-success'>已请款</span>";
                            } else {
                                return "<span class='label'>待请款</span>";
                            }
                        }
                    },
                    {
                        field: 'BusinessRemark',
                        title: '@Html.DisplayNameFor(d=>d.BusinessRemark)',
                        align: "center", valign: "middle",
                    },
                    {
                        field: 'LinkManName',
                        title: '@Html.DisplayNameFor(d=>d.LinkManName)',
                        align: "left", valign: "middle",
                        formatter: formatter.linkman
                    },
                    {
                        field: 'MediaTypeName',
                        title: '@Html.DisplayNameFor(d=>d.MediaTypeName)',
                        align: "center", valign: "middle",
                    },
                    {
                        field: 'MediaName',
                        title: '@Html.DisplayNameFor(d=>d.MediaName)',
                        align: "left", valign: "middle",
                        formatter: function(value,row) {
                            return value +
                                " <a class='btn btn-warning btn-circle btn-xs' href='@Url.Action("Comment", "Media",new{area="Resource"})?id=" +
                                row.MediaPriceId +
                                "' target='_blank' title='评价'><i class='fa fa-commenting'></i></a>";
                        }
                    }
                    ,
                    {
                        field: 'AdPositionName',
                        title: '@Html.DisplayNameFor(d=>d.AdPositionName)',
                        align: "center", valign: "middle",
                    },
                    @*{
                        field: 'CostMoney',
                        title: '@Html.DisplayNameFor(d=>d.CostMoney)',
                        align: "center", valign: "middle",
                    },
                   {
                        field: 'PurchaseMoney',
                        title: '@Html.DisplayNameFor(d=>d.PurchaseMoney)',
                        align: "center"
                    }
                    ,
                    {
                        field: 'Tax',
                        title: '@Html.DisplayNameFor(d=>d.Tax)',
                        align: "center"
                    }
                    ,
                    {
                        field: 'TaxMoney',
                        title: '@Html.DisplayNameFor(d=>d.TaxMoney)',
                        align: "center"
                    },
                    {
                        field: 'DiscountMoney',
                        title: '@Html.DisplayNameFor(d=>d.DiscountMoney)',
                        align: "center"
                    },*@
                    {
                        field: 'MediaTitle',
                        title: '@Html.DisplayNameFor(d=>d.MediaTitle)',
                        align: "center", valign: "middle", formatter: formatter.tooltip
                    },
                    {
                        field: 'PurchaseMoney',
                        title: '@Html.DisplayNameFor(d=>d.PurchaseMoney)',
                        align: "center", valign: "middle"
                    },
                    @*{
                        field: 'PrePublishDate',
                        title: '@Html.DisplayNameFor(d=>d.PrePublishDate)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                            return  moment(value).format("YYYY-MM-DD");
                        }
                    },*@
                    {
                        field: 'PublishDate',
                        title: '@Html.DisplayNameFor(d=>d.PublishDate)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                            if (value) {
                                return moment(value).format("YYYY-MM-DD");
                            }
                        }
                    },
                    {
                        field: 'PublishLink',
                        title: '@Html.DisplayNameFor(d=>d.PublishLink)',
                        align: "center", valign: "middle", formatter: formatter.url
                    },
                    @*{
                        field: 'Money',
                        title: '@Html.DisplayNameFor(d=>d.Money)',
                        align: "center", valign: "middle",
                    },*@
                    {
                        field: 'BusinessBy',
                        title: '@Html.DisplayNameFor(d=>d.BusinessBy)',
                        align: "center", valign: "middle",
                    },
                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        align: "center", valign: "middle",
                    },
                    {
                        field: 'OrderDate',
                        title: '@Html.DisplayNameFor(d=>d.OrderDate)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                            return  moment(value).format("YYYY-MM-DD");
                        }
                    },
                    {
                        field: 'Id',
                        title: '操作',
                        align: "center", valign: "middle",
                        formatter: function (value) {
                            return "<a class='btn btn-success btn-sm' href='@Url.Action("Update")?id=" + value + "');' target='_blank'><i class='fa fa-pencil'></i> 处理</a> " +
                                "<button class='btn btn-danger btn-sm' onclick=\"cancle('" + value + "');\"><i class='fa fa-reply'></i> 撤销</button>";
                        }

                    }

                ]
            });
            };
            return obj;
        };
        var ButtonInit = function () {
            var oInit = new Object();
            oInit.Init = function () {
                $("#btn_reset").click(function () {
                    resetDate();
                    searchFrm.reset($("#searchFrm"));

                });
            };
            return oInit;
        };

        function resetDate() {
            $("#PublishDateStart").val("");
            $("#PublishDateEnd").val("");
        }
        //撤销
        function cancle(id) {
            swal({
                title: "您确定吗?",
                text: "确认要撤销此单据吗?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "确定",
                cancelButtonText: "取消",
                closeOnConfirm: false,
                showLoaderOnConfirm: true
            }, function () {
                $.ajax({
                    type: "post",
                    headers: {
                        '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                    },
                    url: "@Url.Action("Delete")",
                    data: { "id": id },
                    success: function (data) {
                        if (data.State == 1) {
                            $("#table").bootstrapTable('refresh');
                            swal({
                                title: "操作成功",
                                text: data.Msg,
                                timer: 2000,
                                type:"success",
                                showConfirmButton: false
                            });

                        } else {
                            swal("操作提醒", data.Msg, "warning");
                        }
                    },
                    error: function () {
                        swal("操作失败", "系统错误", "error");
                    },
                    complete: function () {

                    }
                });
            });
        }

        function editOrder() {
            var arrselections = $("#table").bootstrapTable('getSelections');
            if (arrselections.length > 1) {
                swal("操作提醒", "只能选择一行数据", "warning");
                return;
            }
            if (arrselections.length <= 0) {
                swal("操作提醒", "请选择有效数据", "warning");
                return;
            }
            $("#modalView").load("@Url.Action("EditOrder")?id=" + arrselections[0].Id,
                function () {
                    $('#modalView .modal').modal('show');
                });

        }
</script>
}








