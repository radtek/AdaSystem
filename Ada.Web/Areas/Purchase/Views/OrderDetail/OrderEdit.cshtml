@using Ada.Core.Domain
@using Ada.Core.Infrastructure
@using Ada.Framework
@using Ada.Services.Admin
@using Microsoft.Ajax.Utilities
@model Ada.Core.ViewModel.Purchase.PurchaseOrderDetailView
@{
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    //var purchaseTypes = fieldService.GetFieldsByKey("PurchaseType").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
    //var settlementTypes = fieldService.GetFieldsByKey("SettlementType").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
    var purchaseStatus = fieldService.GetFieldsByKey("PurchaseStatus").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
}


<div class="row">
    <div class="col-lg-12">
        <div class="tabs-container">
            <p class="bg-danger">@Html.ValidationMessage("message") </p>
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#tab-1">销售信息</a></li>
                @*<li class=""><a data-toggle="tab" href="#tab-2">采购价格</a></li>*@
                <li class=""><a data-toggle="tab" href="#tab-3">出刊信息</a></li>
            </ul>
            <div class="tab-content">
                <div id="tab-1" class="tab-pane active">
                    <div class="panel-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(d => d.LinkManId, Html.DisplayNameFor(d => d.LinkManId).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @if (Model.AuditStatus == Consts.StateNormal)
                                    {
                                        @Html.TextBoxFor(d => d.LinkManName, new { @readonly = "readonly", @class = "form-control" })
                                        @Html.HiddenFor(d => d.LinkManId)
                                    }
                                    else
                                    {
                                        <select class="form-control" required="" name="LinkManId" id="LinkManId">
                                            <option value="@Model.LinkManId">@Model.LinkManName</option>
                                        </select>
                                        @Html.HiddenFor(d => d.LinkManName)
                                    }
                                </div>
                            </div>

                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.MediaTypeName, Html.DisplayNameFor(d => d.MediaTypeName).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.MediaTypeName, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.MediaName, Html.DisplayNameFor(d => d.MediaName).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.MediaName, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.AdPositionName, Html.DisplayNameFor(d => d.AdPositionName).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.AdPositionName, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.MediaTitle, Html.DisplayNameFor(d => d.MediaTitle).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.MediaTitle, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.BusinessBy, Html.DisplayNameFor(d => d.BusinessBy).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.BusinessBy, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.BusinessRemark, Html.DisplayNameFor(d => d.BusinessRemark).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.BusinessRemark, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.TransactorId, Html.DisplayNameFor(d => d.TransactorId).ToString(), new { @class = "col-sm-2 control-label", required = "" })
                                <div class="col-sm-10">
                                    @if (Model.AuditStatus == Consts.StateNormal)
                                    {
                                        @Html.TextBoxFor(d => d.Transactor, new { @readonly = "readonly", @class = "form-control" })
                                        @Html.HiddenFor(d => d.TransactorId)
                                    }
                                    else
                                    {
                                        <select class="form-control" name="TransactorId" id="TransactorId">
                                            <option value="@Model.TransactorId">@Model.Transactor</option>
                                        </select>
                                        @Html.HiddenFor(d => d.Transactor)
                                    }
                                </div>
                            </div>
                            @Html.HiddenFor(d => d.Id)
                            @Html.HiddenFor(d => d.AuditStatus)
                        </div>

                    </div>
                </div>
                @*<div id="tab-2" class="tab-pane">
                        <div class="panel-body">

                            <div class="form-horizontal">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.CostMoney, Html.DisplayNameFor(d => d.CostMoney).ToString(), new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(d => d.CostMoney, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>
                                <div class="hr-line-dashed"></div>
                                <div class="form-group">
                                    @Html.LabelFor(d => d.Tax, Html.DisplayNameFor(d => d.Tax).ToString(), new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(d => d.Tax, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="hr-line-dashed"></div>
                                <div class="form-group">
                                    @Html.LabelFor(d => d.TaxMoney, Html.DisplayNameFor(d => d.TaxMoney).ToString(), new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(d => d.TaxMoney, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>

                                <div class="hr-line-dashed"></div>
                                <div class="form-group">
                                    @Html.LabelFor(d => d.PurchaseMoney, Html.DisplayNameFor(d => d.PurchaseMoney).ToString(), new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(d => d.PurchaseMoney, new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="hr-line-dashed"></div>
                                <div class="form-group">
                                    @Html.LabelFor(d => d.Money, Html.DisplayNameFor(d => d.Money).ToString(), new { @class = "col-sm-2 control-label" })
                                    <div class="col-sm-10">
                                        @Html.TextBoxFor(d => d.Money, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@

                <div id="tab-3" class="tab-pane">
                    <div class="panel-body">
                        <div class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(d => d.CostMoney, Html.DisplayNameFor(d => d.CostMoney).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-4">
                                    @Html.TextBoxFor(d => d.CostMoney, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.PrePublishDate, Html.DisplayNameFor(d => d.PrePublishDate).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-4">
                                    @Html.TextBoxFor(d => d.PrePublishDate, Model.PrePublishDate.IfNotNull(d => d.Value.ToString("yyyy年MM月dd日")), new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.PublishLink, Html.DisplayNameFor(d => d.PublishLink).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.PublishLink, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.PublishDate, Html.DisplayNameFor(d => d.PublishDate).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-4">
                                    @if (Model.AuditStatus == Consts.StateNormal)
                                    {
                                        @Html.TextBoxFor(d => d.PublishDate, Model.PublishDate.IfNotNull(d => d.Value.ToString("yyyy年MM月dd日")), new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {

                                        <div class="input-group date">
                                            @Html.TextBoxFor(d => d.PublishDate, Model.PublishDate.IfNotNull(d => d.Value.ToString("yyyy年MM月dd日")), new { @class = "form-control", @readonly = "" })
                                            <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    }

                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.PurchaseMoney, Html.DisplayNameFor(d => d.PurchaseMoney).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-4">
                                    @if (Model.AuditStatus == Consts.StateNormal || Model.IsPayment == true)
                                    {
                                        @Html.TextBoxFor(d => d.PurchaseMoney, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(d => d.PurchaseMoney, new { @class = "form-control" })
                                    }
                                    @Html.HiddenFor(d => d.IsPayment)
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Remark, Html.DisplayNameFor(d => d.Remark).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(d => d.Remark, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Status, Html.DisplayNameFor(d => d.Status).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-2">
                                    @if (Model.AuditStatus == Consts.StateNormal)
                                    {
                                        <input type="text" readonly="readonly" value="已完成" class="form-control" />
                                        @Html.HiddenFor(d => d.Status)
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(d => d.Status, purchaseStatus, new { @class = "form-control" })
                                    }

                                </div>
                            </div>

                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                <div class="col-sm-4 col-sm-offset-2">
                                    <a class="btn btn-outline btn-default" href="javascript:window.history.go(-1);"><i class="fa fa-reply"></i> 返回</a>
                                    <button class="btn btn-success" type="submit"><i class="fa fa-floppy-o"></i> 保存</button>

                                </div>
                                <div class="col-sm-6">
                                    @if (Model.AuditStatus == Consts.StateNormal)
                                    {
                                        <a class="btn btn-warning pull-right" href="@Url.Action("Audit", new {id = Model.Id})">
                                            <i class="fa fa-unlock"></i> <span>弃审</span>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-primary pull-right" href="@Url.Action("Audit", new {id = Model.Id})">
                                            <i class="fa fa-lock"></i> <span>审核</span>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>



                    </div>
                </div>
            </div>
        </div>
    </div>
</div>