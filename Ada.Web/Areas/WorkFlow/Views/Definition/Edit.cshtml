
@model Ada.Core.ViewModel.WorkFlow.WorkFlowDefinitionView


<div class="row">
    <div class="col-lg-12">
        <div class="ibox-title">
            <a class="btn btn-outline btn-default btn-sm" href="javascript:goBackOrClose();"><i class="fa fa-reply"></i> 返回</a>
            <button class="btn btn-primary btn-sm" type="submit"><i class="fa fa-floppy-o"></i> 保存</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="tabs-container">
            <p class="bg-danger">@Html.ValidationMessage("message") </p>
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#tab-1"> 基本属性</a></li>
                <li class=""><a data-toggle="tab" href="#tab-2"> 流程模板</a></li>
            </ul>
            <div class="tab-content">
                <div id="tab-1" class="tab-pane active">
                    <div class="panel-body">
                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.LabelFor(d => d.Name, Html.DisplayNameFor(d => d.Name).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.Name, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.ActityType, Html.DisplayNameFor(d => d.ActityType).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.ActityType, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Description, Html.DisplayNameFor(d => d.Description).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(d => d.Description, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">开启状态</label>
                                <div class="col-sm-10">
                                    @{
                                        var isCheckedIsStatus = Model.Enabled  ? "checked=''" : "";
                                    }
                                    <div class="checkbox checkbox-success checkbox-inline">
                                        <input type="checkbox" id="@Html.IdFor(d => d.Enabled)" name="@Html.IdFor(d => d.Enabled)" value="true" @isCheckedIsStatus>
                                        <label for="@Html.IdFor(d => d.Enabled)"> 开启 </label>
                                    </div>
                                </div>
                            </div>
                            @Html.HiddenFor(d => d.Id)

                        </div>

                    </div>
                </div>
                <div id="tab-2" class="tab-pane">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.TextAreaFor(d => d.TempForm, new { @class = "form-control summernote" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>








