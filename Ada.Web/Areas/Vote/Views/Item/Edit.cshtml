@using Ada.Core.Infrastructure
@using Ada.Core.ViewModel.Vote
@using Ada.Services.Vote
@model Ada.Core.ViewModel.Vote.VoteItemView
@{
    var service = EngineContext.Current.Resolve<IVoteThemeService>();
    var list = service.LoadEntitiesFilter(new VoteThemeView(){limit = int.MaxValue,Status = true}).Select(d => new SelectListItem { Text = d.Title, Value = d.Id }).ToList();
    
}
<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(d => d.VoteThemeId, Html.DisplayNameFor(d => d.VoteThemeId).ToString(), new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.DropDownListFor(d => d.VoteThemeId, list, "请选择", new { @class = "form-control", required = "" })
        </div>
    </div>
    <div class="hr-line-dashed"></div>
    <div class="form-group">
        @Html.LabelFor(d => d.Title, Html.DisplayNameFor(d => d.Title).ToString(), new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(d => d.Title, new { @class = "form-control",required="" })
        </div>
    </div>
    
    <div class="hr-line-dashed"></div>
    <div class="form-group">
        @Html.LabelFor(d => d.Taxis, Html.DisplayNameFor(d => d.Taxis).ToString(), new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(d => d.Taxis, new { @class = "form-control" })
        </div>
    </div>
    <div class="hr-line-dashed"></div>
    <div class="form-group">
        @Html.LabelFor(d => d.Content, Html.DisplayNameFor(d => d.Content).ToString(), new { @class = "col-sm-2 control-label" })
        <div class="col-sm-10">
            @Html.TextAreaFor(d => d.Content, new { @class = "form-control" })
        </div>
    </div>
    <div class="hr-line-dashed"></div>
    <div class="form-group">
        <label class="col-sm-2 control-label">开启状态</label>
        <div class="col-sm-10">
            @{
                var isCheckedIsStatus = Model.Status ? "checked=''" : "";
            }
            <div class="checkbox checkbox-success checkbox-inline">
                <input type="checkbox" id="@Html.IdFor(d => d.Status)" name="@Html.IdFor(d => d.Status)" value="true" @isCheckedIsStatus>
                <label for="@Html.IdFor(d => d.Status)"> 开启 </label>
            </div>
        </div>
    </div>
    @Html.HiddenFor(d => d.Id)
</div>
