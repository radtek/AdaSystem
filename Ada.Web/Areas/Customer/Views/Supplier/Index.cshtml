
@using System.Web.Optimization
@model Ada.Core.ViewModel.Customer.CommpanyView
@{
    ViewBag.Title = "商家公司";
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>


</div>

<div id="toolbar" class="btn-group">
    <a id="btn_add" class="btn btn-primary btn-outline" href="@Url.Action("Add")">
        <i class="fa fa-plus"></i> 新增
    </a>
    <button class="btn btn-primary btn-outline" type="button" data-toggle="modal" data-target="#uploadModal">
        <i class="fa fa-upload"></i> 导入
    </button>
</div>

<div class="modal inmodal" id="uploadModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">导入供应商信息</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>导入文件</label>
                    <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                        <div class="form-control" data-trigger="fileinput">
                            <i class="glyphicon glyphicon-file fileinput-exists"></i>
                            <span class="fileinput-filename"></span>
                        </div>
                        <span class="input-group-addon btn btn-default btn-file">
                            <span class="fileinput-new">选择</span>
                            <span class="fileinput-exists">更换</span>
                            <input type="file" name="upfile" id="upfile" />
                        </span>
                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">移除</a>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">关闭</button>
                <button type="button" class="ladda-button btn btn-primary" onclick="upLoadFile();" data-style="zoom-in">导入</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/laddaStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/ladda")
<script type="text/javascript">

        $(document).ready(function () {
            var table = new TableInit();
            table.Init();
            ////2.初始化Button的点击事件
            //var oButtonInit = new ButtonInit();
            //oButtonInit.Init();
            $('#uploadModal').on('shown.bs.modal',
                function() {

                }).on('hidden.bs.modal',
                function() {
                    $('.fileinput').fileinput("clear");
                });

        });
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                url: '@Url.Action("GetList")',         //请求后台的URL（*）
                classes: "table table-no-bordered",
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                sortName: "Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                //detailView: true,                   //设置为 true 可以显示详细页面模式。
                //detailFormatter: detailFormatter,
                mobileResponsive: true,
                queryParams: function (parameters) {
                    parameters.IsBusiness = true;
                    return parameters;
                },
                formatSearch: function() {
                    return "@Html.DisplayNameFor(d => d.Name)";
                },
                columns: [
                    {
                        field: 'Name',
                        title: '@Html.DisplayNameFor(d=>d.Name)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'City',
                        title: '@Html.DisplayNameFor(d=>d.City)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'CommpanyType',
                        title: '@Html.DisplayNameFor(d=>d.CommpanyType)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'CommpanyGrade',
                        title: '@Html.DisplayNameFor(d=>d.CommpanyGrade)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'Address',
                        title: '@Html.DisplayNameFor(d=>d.Address)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        align: "center", valign: "middle"
                    },
                    {
                    field: 'Id',
                    title: '操作',
                    align: "center", valign: "middle",
                    formatter: function (value,row) {
                        return "<a class='btn btn-success btn-sm' href='@Url.Action("Update")?id=" + value +"'><i class='fa fa-pencil'></i>  编辑</a> " +
                            "<button class='btn btn-danger btn-sm' onclick=\"cancle('" + value +"');\"><i class='fa fa-trash-o'></i> 删除</button>";
                    }

                }
                ]
            });
            };

            return obj;
        };
        //撤销
        function cancle(id) {
            swal({
                title: "您确定吗?",
                text: "确认要删除此数据吗?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "确定",
                cancelButtonText: "取消",
                closeOnConfirm: false,
                showLoaderOnConfirm: true
            }, function () {
                $.ajax({
                    type: "post",
                    headers: {
                        '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                    },
                    url: "@Url.Action("Delete")",
                    data: { "id": id },
                    success: function (data) {
                        if (data.State == 1) {
                            $("#table").bootstrapTable('refresh');
                            swal({
                                title: "操作成功",
                                text: data.Msg,
                                timer: 2000,
                                type:"success",
                                showConfirmButton: false
                            });

                        } else {
                            swal("操作提醒", data.Msg, "warning");
                        }
                    },
                    error: function () {
                        swal("操作失败", "系统错误", "error");
                    },
                    complete: function () {

                    }
                });
            });
        }
        function checkFileExt(filename) {
            var flag = false; //状态
            var arr = ["xlsx"];
            //取出上传文件的扩展名
            var index = filename.lastIndexOf(".");
            var ext = filename.substr(index + 1);
            //循环比较
            for (var i = 0; i < arr.length; i++) {
                if (ext == arr[i]) {
                    flag = true; //一旦找到合适的，立即退出循环
                    break;
                }
            }
            return flag;
        }
        function upLoadFile() {
            var fileObj = document.getElementById("upfile").files[0]; // js 获取文件对象
            if (typeof (fileObj) == "undefined" || fileObj.size <= 0) {
                swal("操作失败", "请选择文件", "warning");
                return;
            }
            if (!checkFileExt(fileObj.name)) {
                swal("操作失败", "只支持xlsx后缀文件", "warning");
                return;
            }
            var formFile = new FormData();
            formFile.append("upfile", fileObj); //加入文件对象
            var data = formFile;
            var subBtn = $('.ladda-button').ladda();
            $.ajax({
                url: "@Url.Action("Import")",
                data: data,
                type: "Post",
                dataType: "json",
                cache: false, //上传文件无需缓存
                processData: false, //用于对data参数进行序列化处理 这里必须false
                contentType: false, //必须
                success: function(result) {
                    if (result.State == 1) {
                        swal({
                            title: "操作成功",
                            text: data.Msg,
                            timer: 2000,
                            type: "success",
                            showConfirmButton: false
                        });
                    } else {
                        swal("操作失败", result.Msg, "error");
                    }
                },
                error: function() {
                    swal("操作失败", "系统错误", "error");
                },
                beforeSend: function() {
                    subBtn.ladda('start');
                },
                complete: function() {
                    subBtn.ladda('stop');
                }
            });
        }
</script>
}



