@using System.Web.Optimization
@using Ada.Core.Domain.Customer
@using Ada.Core.Infrastructure
@using Ada.Services.Admin
@using Microsoft.Ajax.Utilities
@model Ada.Core.ViewModel.Customer.FollowUpView
@{
    ViewBag.Title = "客户跟进";
    List<SelectListItem> urls = new List<SelectListItem>() { new SelectListItem() { Text = "客户信息", Value = Url.Action("Index") } };
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    var followUpWays = fieldService.GetFieldsByKey("FollowUpWay").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
}
@Html.Partial("Bread", urls)
<div class="wrapper wrapper-content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-lg-12">
                <div class="tabs-container">
                    <p class="bg-danger">@Html.ValidationMessage("message") </p>
                    <ul class="nav nav-tabs">
                        <li class="active"><a data-toggle="tab" href="#tab-1"> 跟进信息</a></li>
                        <li class=""><a data-toggle="tab" href="#tab-2"> 跟进记录</a></li>
                    </ul>
                    <div class="tab-content">
                        <div id="tab-1" class="tab-pane active">
                            <div class="panel-body">
                                <div class="form-horizontal">
                                    <div class="form-group">
                                        @Html.LabelFor(d => d.CompanyName, Html.DisplayNameFor(d => d.CompanyName).ToString(), new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(d => d.CompanyName, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                    </div>

                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(d => d.LinkManName, Html.DisplayNameFor(d => d.LinkManName).ToString(), new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.TextBoxFor(d => d.LinkManName, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                        @Html.HiddenFor(d => d.LinkManId)
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(d => d.FollowUpWay, Html.DisplayNameFor(d => d.FollowUpWay).ToString(), new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.DropDownListFor(d => d.FollowUpWay, followUpWays, new { @class = "form-control", required = "" })
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(d => d.Content, Html.DisplayNameFor(d => d.Content).ToString(), new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-10">
                                            @Html.TextAreaFor(d => d.Content, new { @class = "form-control", required = "", rows = "8" })
                                        </div>
                                    </div>
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        @Html.LabelFor(d => d.NextTime, Html.DisplayNameFor(d => d.NextTime).ToString(), new { @class = "col-sm-2 control-label" })
                                        <div class="col-sm-2">
                                            <div class="input-group date">
                                                @Html.TextBoxFor(d => d.NextTime, Model.NextTime.IfNotNull(d => d.Value.ToString("yyyy年MM月dd日")), new { @class = "form-control", @readonly = "" })
                                                <span class="input-group-addon"><span class="glyphicon glyphicon-remove"></span></span>
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                            </div>
                                        </div>
                                    </div>

                                    @Html.HiddenFor(d => d.Transactor)
                                    @Html.HiddenFor(d => d.TransactorId)
                                    <div class="hr-line-dashed"></div>
                                    <div class="form-group">
                                        <div class="col-sm-4 col-sm-offset-2">
                                            <a class="btn btn-outline btn-default" href="@Url.Action("Index")"><i class="fa fa-reply"></i> 返回</a>
                                            <button class="btn btn-primary" type="submit"><i class="fa fa-floppy-o"></i> 保存</button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div id="tab-2" class="tab-pane">
                            <div class="panel-body">
                                <table id="table"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section StylesFirst {
    @Styles.Render("~/plugins/dateTimePickerStyle")
    @Styles.Render("~/plugins/bootstrapTableStyle")
}
@section Scripts {
    @Scripts.Render("~/plugins/dateTimePickerScript")
    @Scripts.Render("~/plugins/bootstrapTableScript")
<script>
        $(function() {
            $('.input-group.date').datetimepicker({
                language: 'zh-CN',
                weekStart: 1,
                todayBtn: 1,
                autoclose: 1,
                todayHighlight: 1,
                startView: 2,
                minView: 2,
                forceParse: 0,
                format: "yyyy年mm月dd日"
            });
            $('#table').bootstrapTable({
                    classes: "table table-no-bordered",
                    url: '@Url.Action("GetList","FollowUp")', //请求后台的URL（*）
                    striped: true, //是否显示行间隔色
                    cache: false, //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true, //是否显示分页（*）
                    sortable: true, //是否启用排序
                    sortOrder: "desc", //排序方式
                    sortName: "Id",
                    sidePagination: "server", //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1, //初始化加载第一页，默认第一页
                    pageSize: 10, //每页的记录行数（*）
                    //search: true, //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    //strictSearch: true, //设置为 true启用 全匹配搜索，否则为模糊搜索
                    showColumns: true, //是否显示所有的列
                    showRefresh: true, //是否显示刷新按钮
                    minimumCountColumns: 2, //最少允许的列数
                    //clickToSelect: true, //是否启用点击选中行
                    //singleSelect: true, //设置True 将禁止多选
                    uniqueId: "Id", //每一行的唯一标识，一般为主键列
                    //showToggle: true, //是否显示详细视图和列表视图的切换按钮
                    //cardView: false, //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                    //detailView: true,                   //设置为 true 可以显示详细页面模式。
                    //detailFormatter: detailFormatter,
                    mobileResponsive: true,
                    queryParams: function(parameters) {
                        parameters.LinkManId = "@Model.LinkManId";
                        return parameters;
                    },
                    onLoadSuccess: initTooltip,
                    columns: [

                        @*{
                            field: 'CompanyName',
                            title: '@Html.DisplayNameFor(d => d.CompanyName)',
                            align: "center", valign: "middle"
                        },
                        {
                            field: 'LinkManName',
                            title: '@Html.DisplayNameFor(d => d.LinkManName)',
                            align: "center", valign: "middle"
                        },*@
                        {
                            field: 'FollowUpWay',
                            title: '@Html.DisplayNameFor(d => d.FollowUpWay)',
                            align: "center", valign: "middle"
                        },
                        {
                            field: 'Content',
                            title: '@Html.DisplayNameFor(d => d.Content)',
                            align: "center", valign: "middle",
                            formatter:formatter.tooltip
                        },
                        {
                            field: 'NextTime',
                            title: '@Html.DisplayNameFor(d => d.NextTime)',
                            align: "center", valign: "middle",
                            formatter: function(value) {
                                if (value) {
                                    return moment(value).format("YYYY-MM-DD");
                                }
                            }
                        },
                        @*{
                            field: 'Transactor',
                            title: '@Html.DisplayNameFor(d => d.Transactor)',
                            align: "center", valign: "middle"
                        },*@
                      
                        {
                            field: 'Id',
                            title: '操作',
                            align: "center",
                            valign: "middle",
                            formatter: function(value, row) {
                                return "<a class='btn btn-danger btn-sm' href='javascript:;' onclick=\"cancle('" +
                                    value +
                                    "');\");'><i class='fa fa-trash-o'></i> 删除</a>";
                            }
                        }
                    ]
                });
    });
        //撤销
        function cancle(id) {
            swal({
                title: "您确定吗?",
                text: "确认要删除此数据吗?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "确定",
                cancelButtonText: "取消",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "post",
                    headers: {
                        '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                    },
                    url: "@Url.Action("Delete","FollowUp")",
                    data: { "id": id },
                    success: function (data) {
                        if (data.State == 1) {
                            $("#table").bootstrapTable('refresh');
                            swal({
                                title: "操作成功",
                                text: data.Msg,
                                timer: 2000,
                                type:"success",
                                showConfirmButton: false
                            });

                        } else {
                            swal("操作提醒", data.Msg, "warning");
                        }
                    },
                    error: function () {
                        swal("操作失败", data.Msg, "error");
                    },
                    complete: function () {

                    }
                });
            });
        }
</script>
}



