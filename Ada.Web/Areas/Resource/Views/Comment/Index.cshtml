
@using System.Web.Optimization
@using Ada.Core
@using Ada.Core.Domain.Resource
@using Ada.Core.Infrastructure
@model Ada.Core.ViewModel.Resource.MediaCommentView
@{
    ViewBag.Title = "资源评论";
    var repository = EngineContext.Current.Resolve<IRepository<MediaType>>();
    var types = repository.LoadEntities(d => d.IsComment == true && d.IsDelete == false).ToList();
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="toolbar">
    <div class="form-inline" role="form">
        <div class="form-group">
            <select name="Score" class="form-control" id="Score">
                <option value="">星级</option>
                <option value="5">五星</option>
                <option value="4">四星</option>
                <option value="3">三星</option>
                <option value="2">二星</option>
                <option value="1">一星</option>

            </select>
        </div>
        <div class="form-group">
            <select name="MediaTypeId" class="form-control" id="MediaTypeId">
                <option value="">媒体类型</option>
                @foreach (var item in types)
                {
                    <option value="@item.Id">@item.TypeName</option>
                }

            </select>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")

}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")

    <script type="text/javascript">

        $(document).ready(function () {
            var table = new TableInit();
            table.Init();
            $("#Score").add("#MediaTypeId").change(function () {
                refreshTable();
            });
        });

        function refreshTable() {
            $('#table').bootstrapTable('refresh');
        }
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                url: '@Url.Action("GetList")',         //请求后台的URL（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                classes: "table table-no-bordered",
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                sortName: "Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                showFooter:true,
                formatSearch: function() {
                    return "媒体名称|ID|评论人";
                },
                mobileResponsive: true,
                    queryParams: function (parameters) {
                        parameters.Score = $("#Score").val();
                        parameters.MediaTypeId = $("#MediaTypeId").val();
                        return searchFrm.queryParams(parameters);
                    },
                columns: [
                    {
                        field: 'MediaId',
                        title: '@Html.DisplayNameFor(d=>d.MediaId)',
                        //align: "center",
                        valign: "middle",
                        formatter: function (value, row) {
                            var id = row.MediaID ? " - " + row.MediaID : "";
                            var meidaName = "[" + row.TypeName + "] " + row.MediaName + id;
                            return  " <a class='btn btn-success  btn-outline btn-xs' href='@Url.Action("Detail","Media")/" +value +"' target='_blank'>"+meidaName+"</a>";

                        }
                    }
                    ,
                    {
                        field: 'Score',
                        title: '@Html.DisplayNameFor(d=>d.Score)',
                        align: "center", valign: "middle",
                    }
                    ,
                    {
                        field: 'Content',
                        title: '@Html.DisplayNameFor(d=>d.Content)',
                        align: "center", valign: "middle",
                        //formatter: formatter.tooltip
                    },
                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        align: "center", valign: "middle"
                    }
                    ,
                    {
                        field: 'CommentDate',
                        title: '@Html.DisplayNameFor(d=>d.CommentDate)',
                        align: "center", valign: "middle",
                        formatter: function (value) {
                            if (value) {
                                return moment(value).format("YYYY-MM-DD");
                            }
                        }
                    },

                    {
                        field: 'Id',
                        title: '操作',
                        align: "center", valign: "middle",
                        formatter: formatterOperation
                    }
                ]
                });
            };

            return obj;
        };

        function formatterOperation(value) {
            return "<button class='btn btn-danger btn-outline btn-xs' onclick=\"deleteData('@Url.Action("Delete")','" + value + "');\"><i class='fa fa-trash-o'></i> 删除</button>";
        }


    </script>
}











