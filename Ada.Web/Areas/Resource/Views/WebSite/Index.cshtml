
@using System.Web.Optimization
@using Ada.Core.Infrastructure
@using Ada.Services.Resource
@model Ada.Core.ViewModel.Resource.MediaView
@{
    ViewBag.Title = "网站资源";
    var tags = EngineContext.Current.Resolve<IMediaTagService>().GetTags();
    var adpositions = EngineContext.Current.Resolve<IMediaTypeService>().GetMediaTypeByCallIndex("website").AdPositions.Select(d => new SelectListItem() { Text = d.Name, Value = d.Name });
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox collapsed">
        <div class="ibox-title">
            <h5>高级筛选</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            <form id="searchFrm" onSubmit="javascript:searchFrm.search(this, event);">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            @Html.LabelFor(d => d.MediaTagIds, Html.DisplayNameFor(d => d.MediaTagIds) + "：", new { @class = "control-label" })
                            @foreach (var item in tags)
                            {
                                <div class="checkbox checkbox-success checkbox-inline">
                                    <input type="checkbox" name="MediaTagIds" value="@item.Id" id="@item.Id">
                                    <label for="@item.Id">@item.TagName</label>
                                </div>
                            }

                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="col-sm-2 m-b">
                        <div class="form-group">
                            @Html.LabelFor(d => d.AdPositionName, Html.DisplayNameFor(d => d.AdPositionName) + "：", new { @class = "control-label" })
                            @Html.DropDownListFor(d => d.AdPositionName, adpositions, "不限", new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-2 m-b">
                        <div class="form-group">
                            @Html.LabelFor(d => d.PriceStart, Html.DisplayNameFor(d => d.PriceStart) + "：", new { @class = "control-label" })
                            <div class="input-daterange input-group">
                                @Html.TextBoxFor(d => d.PriceStart, new { @class = "form-control input-sm" })
                                <span class="input-group-addon">至</span>
                                @Html.TextBoxFor(d => d.PriceEnd, new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2 m-b">
                        <div class="form-group">
                            @Html.LabelFor(d => d.LinkManName, Html.DisplayNameFor(d => d.LinkManName) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.LinkManName, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-2 m-b">
                        <div class="form-group">
                            @Html.LabelFor(d => d.Transactor, Html.DisplayNameFor(d => d.Transactor) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.Transactor, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>

                <div class="hr-line-dashed"></div>
                <div class="row">
                    <div class="col-sm-12 text-center">
                        <div class="form-group">
                            <button class="btn btn-primary" type="submit"><i class="fa fa-search"></i> 搜索</button>
                            <button class="btn btn-warning" type="button" id="btn_reset"><i class="fa fa-repeat"></i> 重置</button>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>


</div>

<div id="toolbar" class="btn-group">
    <a id="btn_add" class="btn btn-primary btn-outline" href="@Url.Action("Add")">
        <i class="fa fa-plus"></i> 新增
    </a>
</div>

@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")
    <script src="@Url.Content("~/Areas/Resource/Scripts/index.js")"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            var table = new TableInit();
            table.Init();
            //2.初始化Button的点击事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();

        });
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                    url: '@Url.Action("GetList")',         //请求后台的URL（*）
                    classes: "table table-no-bordered",
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                sortName:"Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                //detailView: true,                   //设置为 true 可以显示详细页面模式。
                //detailFormatter: detailFormatter,
                    formatSearch: function() {
                        return "门户名称";
                    },
                mobileResponsive:true,
                onLoadSuccess: initTooltip,
                columns: [
                    {
                        field: 'Status',
                        title: '@Html.DisplayNameFor(d=>d.Status)',
                        valign: "middle",
                        formatter: formatter.normalStatus,
                        align: "center"
                    },

                    {
                        field: 'MediaName',
                        title: '@Html.DisplayNameFor(d=>d.MediaName)',
                        valign: "middle",
                        align: "center",
                        formatter: function(value, row, index) {
                            if (value) {
                                if (row.MediaLink) {
                                    return "<a class='label' href='" + row.MediaLink + "' target='_blank'><i class='fa fa-link'></i> " + value + "-" + row.Client + "-" + row.Channel + "</a>";
                                } else {
                                    return value + "-" + row.Client + "-" + row.Channel;
                                }
                            } else {
                                return "";
                            }
                        }
                    },


                    {
                        field: 'Area',
                        title: '@Html.DisplayNameFor(d=>d.Area)',
                        valign: "middle",
                        align: "center"
                    },
                    {
                        field: 'ResourceType',
                        title: '@Html.DisplayNameFor(d=>d.ResourceType)',
                        valign: "middle",
                        align: "center"
                    },
                    {
                        field: 'Efficiency',
                        title: '@Html.DisplayNameFor(d=>d.Efficiency)',
                        valign: "middle",
                        align: "center"
                    },
                    {
                        field: 'MediaTagStr',
                        title: '@Html.DisplayNameFor(d=>d.MediaTagStr)',
                        valign: "middle",
                        align: "center"
                    },
                    {
                        field: 'MediaPrices',
                        title: '@Html.DisplayNameFor(d=>d.MediaPrices)',
                        valign: "middle",
                        formatter: formatterPrice,
                        //align: "center"
                    },
                    {
                        field: 'Content',
                        title: '@Html.DisplayNameFor(d=>d.Content)',
                        align: "center", valign: "middle", formatter: formatter.tooltip
                    },
                    {
                        field: 'Remark',
                        title: '@Html.DisplayNameFor(d=>d.Remark)',
                        align: "center", valign: "middle", formatter: formatter.tooltip
                    },
                    {
                        field: 'MediaGroups',
                        title: '@Html.DisplayNameFor(d=>d.MediaGroups)',
                        valign: "middle",
                        formatter: formatterGroup,
                        align: "center"
                    },
                    {
                        field: 'LinkManName',
                        title: '@Html.DisplayNameFor(d=>d.LinkManName)',
                        valign: "middle",
                        align: "center"
                    },

                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        valign: "middle",
                        align: "center"
                    },

                    {
                        field: 'Id',
                        title: '操作',
                        valign: "middle",
                        align: "center",
                        formatter: function (value) {
                            return "<a class='btn btn-success btn-sm' href='@Url.Action("Update")?id=" + value + "');'><i class='fa fa-pencil'></i> 编辑</a> " +
                                "<button class='btn btn-danger btn-sm' onclick=\"cancle('" + value +"');\"><i class='fa fa-trash-o'></i> 删除</button>";
                        }
                    }
                ]
            });
            };
            return obj;
        };
        var ButtonInit = function () {
            var oInit = new Object();
            oInit.Init = function () {
                $("#btn_reset").click(function () {
                    searchFrm.reset($("#searchFrm"));
                });
            };

            return oInit;
        };


        //撤销
        function cancle(id) {
            swal({
                title: "您确定吗?",
                text: "确认要删除此数据吗?",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "确定",
                cancelButtonText: "取消",
                closeOnConfirm: false,
                showLoaderOnConfirm: true
            }, function () {
                $.ajax({
                    type: "post",
                    headers: {
                        '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                    },
                    url: "@Url.Action("Delete")",
                    data: { "id": id },
                    success: function (data) {
                        if (data.State == 1) {
                            $("#table").bootstrapTable('refresh');
                            swal({
                                title: "操作成功",
                                text: data.Msg,
                                timer: 2000,
                                type:"success",
                                showConfirmButton: false
                            });

                        } else {
                            swal("操作提醒", data.Msg, "warning");
                        }
                    },
                    error: function () {
                        swal("操作失败", "系统错误", "error");
                    },
                    complete: function () {

                    }
                });
            });
        }
    </script>
}










