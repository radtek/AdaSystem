
@using System.Web.Optimization
@using Ada.Core.Infrastructure
@using Ada.Services.Admin
@using Ada.Services.Resource
@model Ada.Core.ViewModel.Resource.MediaView
@{
    ViewBag.Title = "网红资源";
    var tags = EngineContext.Current.Resolve<IMediaTagService>().GetTags();
    var meidaType = EngineContext.Current.Resolve<IMediaTypeService>().GetMediaTypeByCallIndex("webcast");
    var adpositions = meidaType.AdPositions.Select(d => new SelectListItem() { Text = d.Name, Value = d.Name });
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    var status = fieldService.GetFieldsByKey("Status").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
    var yesnos = fieldService.GetFieldsByKey("YesOrNo").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox collapsed">
        <div class="ibox-title">
            <h5>高级筛选</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            <form id="searchFrm" action="@Url.Action("Export", "Media")" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="MediaTypeId" value="@meidaType.Id" />
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(d => d.MediaTagIds, Html.DisplayNameFor(d => d.MediaTagIds).ToString(), new { @class = "control-label" })
                        <div class="row">
                            <div class="col-md-12">
                                @foreach (var item in tags)
                    {
                        <div class="checkbox checkbox-success checkbox-inline">
                            <input type="checkbox" name="MediaTagIds" value="@item.Id" id="@item.Id">
                            <label for="@item.Id">@item.TagName</label>
                        </div>
        }
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.Platform, Html.DisplayNameFor(d => d.Platform).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.Platform, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.MediaName, Html.DisplayNameFor(d => d.MediaName).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.MediaName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.AdPositionName, Html.DisplayNameFor(d => d.AdPositionName).ToString(), new { @class = "control-label" })
                        @Html.DropDownListFor(d => d.AdPositionName, adpositions, "不限", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.PriceStart, Html.DisplayNameFor(d => d.PriceStart).ToString(), new { @class = "control-label" })
                        <div class="input-daterange input-group">
                            @Html.TextBoxFor(d => d.PriceStart, new { @class = "form-control" })
                            <span class="input-group-addon">至</span>
                            @Html.TextBoxFor(d => d.PriceEnd, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.Areas, Html.DisplayNameFor(d => d.Areas).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.Areas, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.Content, Html.DisplayNameFor(d => d.Content).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.Content, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.Remark, Html.DisplayNameFor(d => d.Remark).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.Remark, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.Status, Html.DisplayNameFor(d => d.Status).ToString(), new { @class = "control-label" })
                        @Html.DropDownListFor(d => d.Status, status, "请选择", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.IsTop, Html.DisplayNameFor(d => d.IsTop).ToString(), new { @class = "control-label" })
                        @Html.DropDownListFor(d => d.IsTop, yesnos, "请选择", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.IsHot, Html.DisplayNameFor(d => d.IsHot).ToString(), new { @class = "control-label" })
                        @Html.DropDownListFor(d => d.IsHot, yesnos, "请选择", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.IsRecommend, Html.DisplayNameFor(d => d.IsRecommend).ToString(), new { @class = "control-label" })
                        @Html.DropDownListFor(d => d.IsRecommend, yesnos, "请选择", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.PriceInvalidDate, Html.DisplayNameFor(d => d.PriceInvalidDate).ToString(), new { @class = "control-label" })
                        <div class="input-group date">
                            <span class="input-group-addon">
                                <i class="fa fa-calendar"></i>
                            </span>
                            @Html.TextBoxFor(d => d.PriceInvalidDate, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.LinkManName, Html.DisplayNameFor(d => d.LinkManName).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.LinkManName, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.Transactor, Html.DisplayNameFor(d => d.Transactor).ToString(), new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.Transactor, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.AddedDateRange, Html.DisplayNameFor(d => d.AddedDateRange) + "：", new { @class = "control-label" })
                        @Html.TextBoxFor(d => d.AddedDateRange, new { @class = "form-control", @readonly = "" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-group">
                        @Html.LabelFor(d => d.HaveTag, Html.DisplayNameFor(d => d.HaveTag).ToString(), new { @class = "control-label" })
                        @Html.DropDownListFor(d => d.HaveTag, yesnos, "请选择", new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(d => d.MediaNames, Html.DisplayNameFor(d => d.MediaNames).ToString(), new { @class = "control-label" })
                        @Html.TextAreaFor(d => d.MediaNames, 4, 20, new { @class = "form-control", placeholder = "多个媒体查询，请用逗号隔开；同时支持复制粘贴的数据查询" })
                    </div>
                </div>


                <div class="row">
                    <div class="col-sm-12 text-center">
                        <div class="form-group">
                            <button class="btn btn-primary" type="button" onclick="$('#table').bootstrapTable('refresh');"><i class="fa fa-search"></i> 搜索</button>
                            <button class="btn btn-warning" type="button" onclick="searchFrm.reset($('#searchFrm'));"><i class="fa fa-repeat"></i> 重置</button>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>


</div>
@Html.Partial("Import")
<div id="toolbar" class="btn-group">
    <a id="btn_add" class="btn btn-primary btn-outline" href="@Url.Action("Add","Media",new{id=meidaType.Id})" target="_blank">
        <i class="fa fa-plus"></i> 新增网红
    </a>
    <button type="button" class="btn btn-primary btn-outline" onclick="exportDate();">
        <i class="fa fa-download"></i> 导出数据
    </button>
    <button type="button" class="btn btn-primary btn-outline" data-toggle="modal" data-target="#uploadModal">
        <i class="fa fa-upload"></i> 更新导入
    </button>
</div>

@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/laddaStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/ladda")
    @Scripts.Render("~/plugins/clipboard")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/dateRange")
    <script src="@Url.Content("~/Areas/Resource/Scripts/index.js?v=2018032218131")"></script>

    <script type="text/javascript">

        $(document).ready(function () {
            var table = new TableInit();
            table.Init();
            initDateRange($('#AddedDateRange'));

        });
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                    url: '@Url.Action("GetList","Media")',         //请求后台的URL（*）
                    method: 'post',
                    classes: "table table-no-bordered",
                toolbar: '#toolbar',                //工具按钮用哪个容器
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                sortName:"Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                //detailView: true,                   //设置为 true 可以显示详细页面模式。
                //detailFormatter: detailFormatter,
                    formatSearch: function() {
                        return "网红名称";
                },
                    queryParams: function (parameters) {
                        parameters.MediaTypeId = '@meidaType.Id';
                        return searchFrm.queryParams(parameters);
                    },
                mobileResponsive:true,
                    onLoadSuccess: function() {
                        initTooltip();
                        new Clipboard('.btn-white');
                    } ,
                columns: [
                    {
                        field: 'MediaLogo',
                        align: "right", valign: "middle",
                        formatter: formatterLogo
                    },

                    {
                        field: 'MediaName',
                        title: '网红名称',
                        valign: "middle",
                        align: "left",
                        formatter: formatterMediaName
                    },


                    {
                        field: 'MediaPrices',
                        title: '@Html.DisplayNameFor(d=>d.MediaPrices)',
                        valign: "middle",
                        formatter: formatterPrice,
                        //align: "center"
                    },
                    {
                        field: 'Content',
                        title: '媒体信息',
                        //align: "center",
                        valign: "middle",
                        formatter: formatterRemark
                    },
                    {
                        field: 'MediaGroups',
                        title: '@Html.DisplayNameFor(d=>d.MediaGroups)',
                        valign: "middle",
                        formatter: formatterGroup,
                        align: "center"
                    },
                    {
                        field: 'LinkManName',
                        title: '@Html.DisplayNameFor(d=>d.LinkManName)',
                        valign: "middle",
                        align: "left",
                        formatter: formatter.linkman
                    },

                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        valign: "middle",
                        align: "center"
                    },

                    {
                        field: 'Id',
                        title: '操作',
                        valign: "middle",
                        align: "center",
                        formatter: formatterOperation
                    }
                ]
            });
            };
            return obj;
        };

    </script>
}









