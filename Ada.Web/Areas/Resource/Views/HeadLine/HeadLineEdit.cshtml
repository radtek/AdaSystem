@using Ada.Core.Infrastructure
@using Ada.Services.Admin
@using Ada.Services.Resource
@using Microsoft.Ajax.Utilities
@model Ada.Core.ViewModel.Resource.MediaView
@{
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    var mediaTypeService = EngineContext.Current.Resolve<IMediaTypeService>();
    var prices = mediaTypeService.GetMediaTypeByCallIndex("headline").AdPositions.ToList();
    var tags = EngineContext.Current.Resolve<IMediaTagService>().GetTags();
    var platforms = fieldService.GetFieldsByKey("HeadLinePlatform").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
}

<div class="row">
    <div class="col-lg-12">
        <div class="tabs-container">
            <p class="bg-danger">@Html.ValidationMessage("message") </p>
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#tab-1"> 基本信息</a></li>
                <li class=""><a data-toggle="tab" href="#tab-2"> 媒体价格</a></li>
            </ul>
            <div class="tab-content">
                <div id="tab-1" class="tab-pane active">
                    <div class="panel-body">
                        <fieldset class="form-horizontal">
                            <div class="form-group">
                                @Html.LabelFor(d => d.LinkManId, Html.DisplayNameFor(d => d.LinkManId).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <select class="form-control" required="" name="LinkManId" id="LinkManId">
                                        <option value="@Model.LinkManId">@Model.LinkManName</option>
                                    </select>
                                </div>
                                @Html.HiddenFor(d => d.LinkManName)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Platform, Html.DisplayNameFor(d => d.Platform).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(d => d.Platform, platforms, "请选择", new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.MediaName, "头条名称", new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.MediaName, new { @class = "form-control", required = "" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(d => d.MediaLink, Html.DisplayNameFor(d => d.MediaLink).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.MediaLink, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.IsAuthenticate, Html.DisplayNameFor(d => d.IsAuthenticate).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <div class="radio radio-info radio-inline">
                                        @Html.RadioButtonFor(d => d.IsAuthenticate, true)
                                        <label> 是 </label>
                                    </div>
                                    <div class="radio radio-info radio-inline">
                                        @Html.RadioButtonFor(d => d.IsAuthenticate, false)
                                        <label> 否 </label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.MediaTagIds, Html.DisplayNameFor(d => d.MediaTagIds).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @foreach (var item in tags)
                                    {
                                        var isChecked = Model.MediaTagIds == null ? "" : Model.MediaTagIds.Contains(item.Id) ? "checked=''" : "";
                                        <div class="checkbox checkbox-success checkbox-inline">
                                            <input type="checkbox" name="MediaTagIds" value="@item.Id" id="@item.Id" @isChecked>
                                            <label for="@item.Id">@item.TagName</label>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.FansNum, Html.DisplayNameFor(d => d.FansNum).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.FansNum, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Content, Html.DisplayNameFor(d => d.Content).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(d => d.Content, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Remark, Html.DisplayNameFor(d => d.Remark).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(d => d.Remark, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Status, Html.DisplayNameFor(d => d.Status).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <div class="radio radio-info radio-inline">
                                        @Html.RadioButtonFor(d => d.Status, 1)
                                        <label> 正常 </label>
                                    </div>
                                    <div class="radio radio-info radio-inline">
                                        @Html.RadioButtonFor(d => d.Status, 0)
                                        <label> 关闭 </label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.TransactorId, Html.DisplayNameFor(d => d.TransactorId).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <select class="form-control" required="" name="TransactorId" id="TransactorId">
                                        <option value="@Model.TransactorId">@Model.Transactor</option>
                                    </select>
                                </div>
                                @Html.HiddenFor(d => d.Transactor)
                            </div>
                            @Html.HiddenFor(d => d.MediaTypeId)
                            @Html.HiddenFor(d => d.Id)
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                <div class="col-sm-4 col-sm-offset-2">
                                    <a class="btn btn-outline btn-default" href="javascript:window.history.go(-1);"><i class="fa fa-reply"></i> 返回</a>
                                    <button class="btn btn-primary" type="submit"><i class="fa fa-floppy-o"></i> 保存</button>
                                </div>
                            </div>
                        </fieldset>

                    </div>
                </div>

                <div id="tab-2" class="tab-pane">
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>
                                            广告位
                                        </th>
                                        <th>
                                            采购价格
                                        </th>
                                        <th style="width: 20%">
                                            价格日期
                                        </th>
                                        <th style="width: 20%">
                                            失效日期
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < prices.Count; i++)
                                    {
                                        <tr>
                                            @{
                                                var price = Model.MediaPrices?.FirstOrDefault(d => d.AdPositionName == prices[i].Name);
                                                var id = price == null ? "" : price.Id;
                                                var purchasePrice = price == null ? 0 : price.PurchasePrice;
                                                var priceDate = DateTime.Now.ToString("yyyy年MM月dd日");
                                                if (price?.PriceDate != null)
                                                {
                                                    priceDate = price.PriceDate.Value.ToString("yyyy年MM月dd日");
                                                }
                                                var invalidDate = "";
                                                if (price?.InvalidDate != null)
                                                {
                                                    invalidDate = price.InvalidDate.Value.ToString("yyyy年MM月dd日");
                                                }
                                            }
                                            <td>
                                                <input name="MediaPrices[@i].Id" type="hidden" value="@id" />
                                                <input name="MediaPrices[@i].AdPositionId" type="hidden" value="@prices[i].Id" />
                                                <input class="form-control" name="MediaPrices[@i].AdPositionName" readonly="readonly" type="text" value="@prices[i].Name" />
                                            </td>
                                            <td>
                                                <input class="form-control" name="MediaPrices[@i].PurchasePrice" placeholder="¥0.00" type="text" value="@purchasePrice" />
                                            </td>
                                            <td>
                                                <div class="input-group date">
                                                    <span class="input-group-addon">
                                                        <i class="fa fa-calendar"></i>
                                                    </span>
                                                    <input class="form-control" name="MediaPrices[@i].PriceDate" type="text" value="@priceDate" />
                                                </div>
                                            </td>
                                            <td>
                                                <div class="input-group date">
                                                    <span class="input-group-addon">
                                                        <i class="fa fa-calendar"></i>
                                                    </span>
                                                    <input class="form-control" name="MediaPrices[@i].InvalidDate" type="text" value="@invalidDate" />
                                                </div>
                                            </td>
                                        </tr>
                                    }

                                </tbody>

                            </table>
                        </div>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


