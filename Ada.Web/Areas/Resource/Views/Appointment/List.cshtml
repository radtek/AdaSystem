
@using System.Web.Optimization
@model Ada.Core.ViewModel.Resource.MediaAppointmentView
@{
    ViewBag.Title = "预约记录";
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="toolbar">
    <div class="form-inline" role="form">
        <div class="form-group">
            @Html.TextBoxFor(d => d.AppointmentDateRange, new { @class = "form-control", placeholder = "预约日期" })
        </div>
    </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")
    @Styles.Render("~/plugins/dateRangeStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")
    @Scripts.Render("~/plugins/dateRange")
    <script type="text/javascript">

        $(document).ready(function () {
            
            var start = moment(), end = moment();
            var $datepicker = $('#AppointmentDateRange');
            $('#AppointmentDateRange').val(start.format('YYYY-MM-DD') + '至' + end.format('YYYY-MM-DD'));
            $datepicker.daterangepicker({
                //autoUpdateInput: false,
                startDate: start,
                endDate: end,
                opens: "center",
                linkedCalendars: false,
                ranges: {
                    '今日': [moment(), moment()],
                    '明日': [moment().add('days', 1), moment().add('days', 1)],
                    '未来7日': [moment(), moment().add('days', 7)],
                    '未来30日': [moment(), moment().add('days', 30)]
                },
                locale: {
                    format: 'YYYY-MM-DD',
                    separator: "至",
                    applyLabel: "确认",
                    cancelLabel: "取消",
                    fromLabel: "从",
                    toLabel: "到",
                    customRangeLabel: "自定义",
                    weekLabel: "周",
                    daysOfWeek: [
                        "日",
                        "一",
                        "二",
                        "三",
                        "四",
                        "五",
                        "六"
                    ],
                    monthNames: [
                        "一月",
                        "二月",
                        "三月",
                        "四月",
                        "五月",
                        "六月",
                        "七月",
                        "八月",
                        "九月",
                        "十月",
                        "十一月",
                        "十二月"
                    ],
                    firstDay: 1
                }
            });

            $datepicker.on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('YYYY-MM-DD') + '至' + picker.endDate.format('YYYY-MM-DD'));
                $('#table').bootstrapTable("refresh");
            });
            //$datepicker.on('cancel.daterangepicker', function (ev, picker) {
            //    $(this).val('');
            //    $('#table').bootstrapTable("refresh");
            //});
            var table = new TableInit();
            table.Init();
        });
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                url: '@Url.Action("GetList")',         //请求后台的URL（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                classes: "table table-no-bordered",
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "asc",                   //排序方式
                sortName: "Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 50,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                mobileResponsive: true,
                queryParams: function (parameters) {
                    parameters.AppointmentDateRange = $("#AppointmentDateRange").val();
                    return parameters;
                },
                formatSearch: function() {
                    return "预约人/媒体名称";
                },
                columns: [
                    {
                        field: 'MediaName',
                        title: '@Html.DisplayNameFor(d=>d.MediaName)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'Taxis',
                        title: '@Html.DisplayNameFor(d=>d.Taxis)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                            if (value==1) {
                                return "头条";
                            }
                            if (value == 2) {
                                return "次条";
                            }
                            return value;
                        }
                    },
                    {
                        field: 'AppointmentDate',
                        title: '@Html.DisplayNameFor(d=>d.AppointmentDate)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                            return  moment(value).format("YYYY-MM-DD");
                        }
                    },

                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        align: "center", valign: "middle"
                    }
                ]
            });
            };

            return obj;
        };

    </script>
}











