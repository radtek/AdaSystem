@using System.Web.Optimization
@using Ada.Core.Infrastructure
@using Ada.Services.Admin
@model Ada.Core.ViewModel.Business.BusinessPaymentView
@{
    ViewBag.Title = "申请付款";
    ViewBag.Bread = new List<SelectListItem>() { new SelectListItem() { Text = "我的领款", Value = Url.Action("Index") } };
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    var paymentTypes = fieldService.GetFieldsByKey("PaymentType");
}
@Html.Partial("Bread")


<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <p class="bg-danger">@Html.ValidationMessage("message") </p>
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-title">
                        <a class="btn btn-outline btn-default btn-sm" href="javascript:window.history.go(-1);"><i class="fa fa-reply"></i> 返回</a>
                        <button class="btn btn-primary btn-sm" type="submit" data-style="slide-right"><i class="fa fa-floppy-o"></i> 保存</button>
                    </div>
                    <div class="ibox-content">
                        <div class="sk-spinner sk-spinner-wave">
                            <div class="sk-rect2"></div>
                            <div class="sk-rect3"></div>
                            <div class="sk-rect4"></div>
                            <div class="sk-rect5"></div>
                        </div>
                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.LabelFor(d => d.ApplicationNum, Html.DisplayNameFor(d => d.ApplicationNum).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.ApplicationNum, new { @class = "form-control", @readonly = "readonly", placeholder = "自动编码" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.LinkmanName, Html.DisplayNameFor(d => d.LinkmanName).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.LinkmanName, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                            
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.AccountBank, Html.DisplayNameFor(d => d.AccountBank).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.AccountBank, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.AccountName, Html.DisplayNameFor(d => d.AccountName).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.AccountName, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.AccountNum, Html.DisplayNameFor(d => d.AccountNum).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.AccountNum, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.PayMoney, Html.DisplayNameFor(d => d.PayMoney).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(d => d.PayMoney, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.PaymentType, Html.DisplayNameFor(d => d.PaymentType).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @foreach (var item in paymentTypes)
                                    {
                                        <div class="radio radio-info radio-inline">
                                            @if (item.Value==Model.PaymentType)
                                            {
                                                <input type="radio" id="@item.Id" value="@item.Value" name="PaymentType" checked="checked">
                                            }
                                            else
                                            {
                                                <input type="radio" id="@item.Id" value="@item.Value" name="PaymentType">
                                            }
                                            
                                            <label for="@item.Id">@item.Value</label>
                                        </div>
                                    }
                                    
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Image, Html.DisplayNameFor(d => d.Image).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    <div class="dropzone" id="myDropzone">
                                        <div class="dz-message">
                                            <strong>将图片拖拽到此处</strong>
                                            <br>或点此打开文件管理器选择图片
                                            <br>（注：只支持*.jpg,*.jpge,*.png格式的图片，图片大小最大不超过2M）
                                        </div>
                                    </div>
                                    @*@Html.TextBoxFor(d => d.Image, new { @class = "form-control", required = "" })*@
                                    @Html.HiddenFor(d=>d.Image)
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <div class="form-group">
                                @Html.LabelFor(d => d.Remark, Html.DisplayNameFor(d => d.Remark).ToString(), new { @class = "col-sm-2 control-label" })
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(d => d.Remark, new { @class = "form-control", required = "" })
                                </div>
                            </div>
                            @Html.HiddenFor(d => d.BusinessPayeeId)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section StylesFirst {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/Content/plugins/dropzone/dropZoneStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/dropZone")

    <script type="text/javascript">
        Dropzone.autoDiscover = false;
        var myDropzone = new Dropzone("#myDropzone", {
            url: "@Url.Action("UploadImage", "Common",new{area="Admin"})",
            paramName:"upfile",
            addRemoveLinks: true,
            dictRemoveFile: '删除',
            dictCancelUpload: "取消",
            maxFiles: 1,
            maxFilesize: 2,
            dictFileTooBig:"图片文件太大，当前为{{filesize}}M，最大只能{{maxFilesize}}M",
            acceptedFiles: ".jpg,.png,.jpeg",
            dictInvalidFileType: "只允许上传图片类型文件（*.jpg,*.jpge,*.png）",
            dictMaxFilesExceeded: "只允许上传一张图片",
            dictResponseError:"上传失败，{{statusCode}}",
            //sending: function (file, xhr, formData) {//如果你想给上传的文件添加额外（多个文件时会具体到每个文件）,您可以注册发送事件
            //    formData.append("filesize", file.size);
            //},
            success: function (file, response, e) {
                if (response.State==1) {
                    if (file.previewElement) {
                        $(file.previewTemplate).children('.dz-success-mark').css('opacity', '1');
                    }
                    $("#Image").val(response.Msg);
                } else {
                    $(file.previewTemplate).children('.dz-error-mark').css('opacity', '1');
                }
            },
            removedfile: function(file) {
                if (file.previewElement != null && file.previewElement.parentNode != null) {
                    file.previewElement.parentNode.removeChild(file.previewElement);
                }
                if (file.status =="success") {//清空上传成功的文件
                    $("#Image").val("");
                    //TODO 删除服务器上的文件
                }
                return this._updateMaxFilesReachedClass();
            }
        });
        $(function() {
            $(".wrapper.wrapper-content form").validate({
                submitHandler: function (form) {
                    $('.wrapper.wrapper-content .ibox').children('.ibox-content').toggleClass('sk-loading');
                    form.submit();
                },
                rules:{
                    PayMoney:{
                        range: [1, @Model.TotalMoney]
                    }
                }
            });
        });
    </script>
}