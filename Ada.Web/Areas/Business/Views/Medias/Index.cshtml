@using System.Web.Optimization
@using Ada.Core
@using Ada.Core.Domain.Resource
@using Ada.Core.Infrastructure
@using Ada.Core.ViewModel.Resource
@using Ada.Services.Admin
@using Ada.Services.Resource
@using Microsoft.Ajax.Utilities
@model MediaView
@{
    ViewBag.Title = "媒体查询";
    var repository = EngineContext.Current.Resolve<IRepository<MediaType>>();
    var mediaTypes = repository.LoadEntities(d => d.IsDelete == false).OrderBy(d => d.Taxis).ToList();
    var tags = EngineContext.Current.Resolve<IMediaTagService>().GetTags();
    List<SelectListItem> adaPostions = new List<SelectListItem>();
    if (!string.IsNullOrWhiteSpace(Model.MediaTypeId))
    {
        var mediaType = repository.LoadEntities(d => d.Id == Model.MediaTypeId).FirstOrDefault();
        adaPostions = mediaType.AdPositions.Select(d => new SelectListItem() { Text = d.Name, Value = d.Name }).ToList();
    }
    var fieldService = EngineContext.Current.Resolve<IFieldService>();
    var seos = fieldService.GetFieldsByKey("SEO").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });

    var resourceTypes = fieldService.GetFieldsByKey("ResourceType").Select(d => new SelectListItem { Text = d.Text, Value = d.Value });
}
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index","Home",new{area= "Dashboards" })">工作台</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Title</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight ecommerce">

    <div class="ibox-content m-b-sm border-bottom">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(d => d.MediaTypeId, Html.DisplayNameFor(d => d.MediaTypeId).ToString(), new { @class = "control-label" })
                    <select name="MediaTypeId" class="form-control" id="MediaTypeId">
                        <option value="">请选择</option>
                        @foreach (var item in mediaTypes)
                {
                    if (item.Id == Model.MediaTypeId)
                    {
                        <option value="@item.Id" data-value='@Html.Raw(Json.Encode(item.AdPositions.Select(d => d.Name)))' selected="selected">@item.TypeName</option>
            }
            else
            {
                <option value="@item.Id" data-value='@Html.Raw(Json.Encode(item.AdPositions.Select(d => d.Name)))'>@item.TypeName</option>
    }

}
                    </select>

                </div>
            </div>
           
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(d => d.MediaName, Html.DisplayNameFor(d => d.MediaName).ToString(), new { @class = "control-label" })
                    @Html.TextBoxFor(d => d.MediaName, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(d => d.MediaID, Html.DisplayNameFor(d => d.MediaID).ToString(), new { @class = "control-label" })
                    @Html.TextBoxFor(d => d.MediaID, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(d => d.Platform, Html.DisplayNameFor(d => d.Platform).ToString(), new { @class = "control-label" })
                    @Html.TextBoxFor(d => d.Platform, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(d => d.AdPositionName, Html.DisplayNameFor(d => d.AdPositionName).ToString(), new { @class = "control-label" })
                    @Html.DropDownListFor(d => d.AdPositionName, adaPostions, "不限", new { @class = "form-control" })
                </div>
            </div>
            <div class="col-sm-2">
                <div class="form-group">
                    @Html.LabelFor(d => d.PriceStart, Html.DisplayNameFor(d => d.PriceStart).ToString(), new { @class = "control-label" })
                    <div class="input-daterange input-group">
                        @Html.TextBoxFor(d => d.PriceStart, new { @class = "form-control" })
                        <span class="input-group-addon">至</span>
                        @Html.TextBoxFor(d => d.PriceEnd, new { @class = "form-control" })
                    </div>

                </div>
            </div>


        </div>


            <div class="panel-group" id="accordion">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h4 class="panel-title">
                            <a data-toggle="collapse" data-parent="#accordion" href="#collapse">更多条件</a>
                        </h4>
                    </div>
                    <div id="collapse" class="panel-collapse collapse">
                        <div class="panel-body">
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.Areas, Html.DisplayNameFor(d => d.Areas).ToString(), new { @class = "control-label" })
                                    @Html.TextBoxFor(d => d.Areas, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.SEO, Html.DisplayNameFor(d => d.SEO).ToString(), new { @class = "control-label" })
                                    @Html.DropDownListFor(d => d.SEO, seos, "请选择", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.ResourceType, Html.DisplayNameFor(d => d.ResourceType).ToString(), new { @class = "control-label" })
                                    @Html.DropDownListFor(d => d.ResourceType, resourceTypes, "请选择", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-sm-3">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.Efficiency, Html.DisplayNameFor(d => d.Efficiency).ToString(), new { @class = "control-label" })
                                    @Html.TextBoxFor(d => d.Efficiency, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-sm-12">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.MediaTagIds, Html.DisplayNameFor(d => d.MediaTagIds).ToString(), new { @class = "control-label" })
                                    <div class="row">
                                        <div class="col-md-12">
                                            @foreach (var item in tags)
                                            {
                                                var isChecked = Model.MediaTagIds == null ? "" : Model.MediaTagIds.Contains(item.Id) ? "checked=''" : "";
                                                <div class="checkbox checkbox-success checkbox-inline">
                                                    <input type="checkbox" name="MediaTagIds" value="@item.Id" id="@item.Id" @isChecked>
                                                    <label for="@item.Id">@item.TagName</label>
                                                </div>
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.MediaNames, Html.DisplayNameFor(d => d.MediaNames).ToString(), new { @class = "control-label" })
                                    @Html.TextAreaFor(d => d.MediaNames, 4, 20, new { @class = "form-control", placeholder = "多个媒体查询，请用逗号隔开；同时支持复制粘贴的数据查询" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(d => d.MediaIDs, Html.DisplayNameFor(d => d.MediaIDs).ToString(), new { @class = "control-label" })
                                    @Html.TextAreaFor(d => d.MediaIDs, 4, 20, new { @class = "form-control", placeholder = "多个媒体查询，请用逗号隔开；同时支持复制粘贴的数据查询" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <input type="hidden" name="Submit.Export" id="export" value="" />
            @Html.HiddenFor(d => d.PriceType)
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        <button class="btn btn-primary" name="Submit.Search" value="search" type="submit"><i class="fa fa-search"></i> 开始搜索</button>
                        <button class="btn btn-white" type="button" onclick="exportData();"><i class="fa fa-download"></i> 导出数据</button>
                    </div>
                </div>
            </div>

        }



    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <div class="sk-spinner sk-spinner-wave">
                        <div class="sk-rect2"></div>
                        <div class="sk-rect3"></div>
                        <div class="sk-rect4"></div>
                        <div class="sk-rect5"></div>
                    </div>
                    @Html.ValidationMessage("message")
                    @if (Model.Medias.Count > 0)
                    {
                        <div class="hr-line-dashed"></div>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>媒体类型</th>
                                    <th>媒体信息</th>
                                    <th data-breakpoints="xs sm">媒体分类</th>
                                    <th data-breakpoints="xs sm">粉丝数</th>
                                    <th data-breakpoints="xs">媒体价格</th>
                                    <th data-breakpoints="all" data-title="媒体说明">媒体说明</th>
                                    <th data-breakpoints="all" data-title="媒体备注">媒体备注</th>
                                    <th data-breakpoints="xs sm">经办媒介</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Medias)
                                {
                                    if (string.IsNullOrWhiteSpace(item.Id))
                                    {
                                        continue;
                                    }
                                    <tr>
                                        <td>@item.MediaType.TypeName</td>
                                        @{
                                            var mediaName = item.MediaName;
                                            var sex = "";
                                            if (item.Sex == "男")
                                            {
                                                sex = "<img alt='男' class='img-circle' src='/Images/man.png' style='width: 25px; height: 25px;'/>";
                                            }
                                            if (item.Sex == "女")
                                            {
                                                sex = "<img alt='女' class='img-circle' src='/Images/lady.png' style='width: 25px; height: 25px;'/>";
                                            }
                                            var detail = " <button class='btn btn-info btn-xs'>详</button>";
                                            switch (item.MediaType.CallIndex)
                                            {
                                                case "website":
                                                    mediaName = item.MediaName + "-" + item.Client + "-" + item.Channel;
                                                    break;
                                                case "weixin":
                                                    mediaName = item.MediaName + " [ " + item.MediaID + " ]";
                                                    break;
                                                case "sinablog":
                                                    var area = "";
                                                    if (!string.IsNullOrWhiteSpace(item.Area))
                                                    {
                                                        area = "<div class='p-xxs'><span class='badge badge-info'><i class='fa fa-map-marker'></i> " + item.Area + "</span></div>";
                                                    }

                                                    mediaName = sex + "<a class='label' href='https://weibo.com/u/" + item.MediaID + "' target='_blank' title='" + item.Abstract + "'><i class='fa fa-link'></i> <span id='" + item.Id + "'>" + item.MediaName + "</span></a>" + detail + area;
                                                    break;
                                                case "headline":
                                                case "webcast":
                                                case "brush":
                                                    mediaName = "[ " + item.Platform + " ] " + item.MediaName;
                                                    break;
                                            }
                                        }
                                        <td>
                                            @Html.Raw(mediaName)  <a class='btn btn-warning btn-circle btn-xs' href='@Url.Action("Comment", "Media",new{area="Resource",id=item.Id})' target='_blank' title='评价'><i class='fa fa-commenting'></i></a>
                                        </td>
                                        <td>@string.Join(",", item.MediaTags.Select(d => d.TagName))</td>
                                        <td>@item.FansNum</td>
                                        <td>
                                            @foreach (var price in item.MediaPrices)
                                            {
                                                var str = price.AdPositionName + "：¥ " + price.PurchasePrice + "　　有效期至：" + price.InvalidDate.IfNotNull(d => d.Value.ToString("yyyy-MM-dd"));
                                                <div class="p-xxs"><span class="label label-info">@str</span></div>
                                            }
                                        </td>
                                        <td>@item.Content</td>
                                        <td>@item.Remark</td>
                                        <td>@item.Transactor</td>
                                    </tr>
                                }


                            </tbody>
                        </table>

                    }



                </div>
            </div>
        </div>
    </div>


</div>

@section Styles {
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/footableV3Styles")
}

@section Scripts {
    @Scripts.Render("~/plugins/footableV3")
    <script type="text/javascript">
        $(function() {
            @if (Model.Medias.Count > 0)
            {
                <text>
                    $('.table').footable();
                </text>
            }
            //$(".wrapper.wrapper-content form").validate({
            //    submitHandler: function(form) {
            //        $('.row .ibox').children('.ibox-content').toggleClass('sk-loading');
            //        form.submit();
            //    }
            //        });
            $("#MediaTypeId").change(function () {
                var $adpostion = $("#AdPositionName");
                $adpostion.empty();
                if ($(this).val()) {
                    var selectdata = $(this).find('option:selected').attr("data-value");
                    var arr = JSON.parse(selectdata);
                    $adpostion.append("<option value=''>不限</option>");
                    $.each(arr,
                        function(k, v) {
                            $adpostion.append("<option value='" + v + "'>" + v + "</option>");
                        });
                } else {
                    $adpostion.append("<option value=''>不限</option>");
                }
            });
        });

        function exportData() {

            swal({
                title: "媒体资源导出",
                text: "请选择导出的价格类型",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "销售价导出",
                    cancelButtonText: "成本价导出",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                function(isConfirm){
                    if (isConfirm) {
                        $("#PriceType").val("1");
                    } else {
                        $("#PriceType").val("0");
                    }
                    $("#export").val("export");
                    $('form')[0].submit();
                    $("#export").val("");
                    swal({
                        title: "数据正在导出中...",
                        text: "请耐心等待"
                    });

                });
        }
    </script>
}
