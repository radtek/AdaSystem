
@using System.Web.Optimization
@model Ada.Core.ViewModel.Business.BusinessOrderView
@{
    ViewBag.Title = "销售订单";
    List<SelectListItem> vstatus = new List<SelectListItem>() { new SelectListItem() { Text = "已核销", Value = "true" }, new SelectListItem() { Text = "未核销", Value = "false" } };
}
@Html.Partial("Bread")

<div class="wrapper wrapper-content animated fadeInRight ecommerce">
    <div class="ibox collapsed">
        <div class="ibox-title">
            <h5>高级筛选</h5>
            <div class="ibox-tools">
                <a class="collapse-link">
                    <i class="fa fa-chevron-up"></i>
                </a>
            </div>
        </div>
        <div class="ibox-content">
            <form id="searchFrm" onSubmit="javascript:searchFrm.search(this,event);">
                <div class="row">
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.LinkManName, Html.DisplayNameFor(d => d.LinkManName) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.LinkManName, new { @class = "form-control input-sm" })
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.Remark, Html.DisplayNameFor(d => d.Remark) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.Remark, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.OrderNum, Html.DisplayNameFor(d => d.OrderNum) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.OrderNum, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.VerificationStatus, Html.DisplayNameFor(d => d.VerificationStatus) + "：", new { @class = "control-label" })
                            @Html.DropDownListFor(d => d.VerificationStatus, vstatus,"请选择",new { @class = "form-control input-sm" })
                        </div>
                    </div>
                    <div class="col-sm-3">
                        <div class="form-group">
                            @Html.LabelFor(d => d.Transactor, Html.DisplayNameFor(d => d.Transactor) + "：", new { @class = "control-label" })
                            @Html.TextBoxFor(d => d.Transactor, new { @class = "form-control input-sm" })
                        </div>
                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="row">
                    <div class="col-sm-12 text-center">
                        <div class="form-group">
                            <button class="btn btn-primary" type="submit"><i class="fa fa-search"></i> 搜索</button>
                            <button class="btn btn-warning" type="button" id="btn_reset"><i class="fa fa-repeat"></i> 重置</button>
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <table id="table"></table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="toolbar" class="btn-group">
    <div class="form-inline" role="form">
        <div class="form-group">
            <select name="Status" class="form-control" id="OrderStatus">
                <option value="false">待处理</option>
                <option value="true">已完成</option>
            </select>
            
            <a id="btn_add" class="btn btn-primary btn-outline" href="@Url.Action("Add")" target='_blank'>
                <i class="fa fa-plus"></i> 新增订单
            </a>
            <button type="button" class="btn btn-primary btn-outline" data-toggle="modal" data-target="#uploadModal">
                <i class="fa fa-plus"></i> 新增网稿
            </button>
            <button id="btn_delete" type="button" class="btn btn-primary btn-outline">
                <i class="fa fa-trash-o"></i> 删除订单
            </button>
        </div>
    </div>
</div>
<div class="modal inmodal" id="uploadModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content animated bounceInRight">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">新增网稿订单</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>项目摘要</label>
                    <input type="text" class="form-control" id="orderName" />
                </div>
                <div class="form-group">
                    <label>客户名称</label>
                    <select class="form-control" id="LinkManId"></select>
                    <input type="hidden" id="linkname" value="" />
                </div>
                <div class="form-group">
                    <label>税率%</label>
                    <input type="number" class="form-control" id="tax" value="0"/>
                </div>
                <div class="form-group">
                    <label>导入文件</label>
                    <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                        <div class="form-control" data-trigger="fileinput">
                            <i class="glyphicon glyphicon-file fileinput-exists"></i>
                            <span class="fileinput-filename"></span>
                        </div>
                        <span class="input-group-addon btn btn-default btn-file">
                            <span class="fileinput-new">选择</span>
                            <span class="fileinput-exists">更换</span>
                            <input type="file" name="upfile" id="upfile" />
                        </span>
                        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">移除</a>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">关闭</button>
                <button type="button" class="ladda-button btn btn-primary" onclick="upLoadFile();" data-style="zoom-in">导入</button>
            </div>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/bootstrapTableStyle")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/laddaStyles")
    @Styles.Render("~/plugins/select2Styles")
    <style>
        .select2-drop {
            z-index: 10050 !important;
        }

        .select2-search-choice-close {
            margin-top: 0 !important;
            right: 2px !important;
            min-height: 10px;
        }

        .select2-search-choice-close:before {
            color: black !important;
        }
        /*防止select2不会自动失去焦点*/
        .select2-container {
            z-index: 16000 !important;
        }

        .select2-drop-mask {
            z-index: 15990 !important;
        }

        .select2-drop-active {
            z-index: 15995 !important;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/plugins/bootstrapTableScript")
    @Scripts.Render("~/plugins/peity")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/ladda")
    @Scripts.Render("~/plugins/select2")
    <script src="@Url.Content("~/Areas/Business/Scripts/linkman.js")"></script>
    <script type="text/javascript">
        
        $(document).ready(function () {
            var table = new TableInit();
            table.Init();
            //2.初始化Button的点击事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();
            $("#OrderStatus").change(function() {
                $('#table').bootstrapTable('refresh');
            });
            $('#uploadModal').on('shown.bs.modal',
                function () {
                    initSelect("LinkManId", linkmanSelect, $("#modalView .modal"));
                }).on('hidden.bs.modal',
                function () {
                    $('.fileinput').fileinput("clear");
                    $("#LinkManId").val("");
                    $("#linkname").val("");
                    $("#orderName").val("");
                    $("#tax").val("0");
                });
        });
        var TableInit = function() {
            var obj = new Object();
            obj.Init = function() {
                $('#table').bootstrapTable({
                url: '@Url.Action("GetList")',         //请求后台的URL（*）
                toolbar: '#toolbar',                //工具按钮用哪个容器
                classes: "table table-no-bordered",
                striped: true,                      //是否显示行间隔色
                cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                pagination: true,                   //是否显示分页（*）
                sortable: true,                     //是否启用排序
                sortOrder: "desc",                   //排序方式
                sortName: "Id",
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                       //初始化加载第一页，默认第一页
                pageSize: 10,                       //每页的记录行数（*）
                search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                strictSearch: true,                 //设置为 true启用 全匹配搜索，否则为模糊搜索
                showColumns: true,                  //是否显示所有的列
                showRefresh: true,                  //是否显示刷新按钮
                minimumCountColumns: 2,             //最少允许的列数
                clickToSelect: true,                //是否启用点击选中行
                singleSelect: true,                  //设置True 将禁止多选
                uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                showToggle: true,                    //是否显示详细视图和列表视图的切换按钮
                cardView: false,                    //设置为 true将显示card视图，适用于移动设备。否则为table试图，适用于pc
                //detailView: true,                   //设置为 true 可以显示详细页面模式。
                //detailFormatter: detailFormatter,
                formatSearch: function() {
                    return "@Html.DisplayNameFor(d => d.LinkManName)";
                },
                mobileResponsive: true,
                onLoadSuccess: initPie,
                queryParams: function(parameters) {
                    parameters.OrderStatus = $("#OrderStatus").val();
                    return searchFrm.queryParams(parameters);
                },
                columns: [
                    {
                        checkbox: true
                    },
                    {
                        field: 'OrderNum',
                        title: '@Html.DisplayNameFor(d=>d.OrderNum)',
                        align: "center", valign: "middle"
                    },
                    {
                        field: 'Remark',
                        title: '@Html.DisplayNameFor(d=>d.Remark)',
                        align: "center", valign: "middle",
                    }
                    ,
                    {
                        field: 'LinkManName',
                        title: '@Html.DisplayNameFor(d=>d.LinkManName)',
                        align: "left", valign: "middle",
                        formatter:formatter.linkman
                    }
                    ,
                    {
                        field: 'PurchaseSchedule',
                        title: '@Html.DisplayNameFor(d=>d.PurchaseSchedule)',
                        align: "center", valign: "middle",
                        formatter: formatter.pie
                    },

                    {
                        field: 'OrderSchedule',
                        title: '@Html.DisplayNameFor(d=>d.OrderSchedule)',
                        align: "center", valign: "middle",
                        formatter: formatter.pie
                    },


                    {
                        field: 'TotalSellMoney',
                        title: '@Html.DisplayNameFor(d=>d.TotalSellMoney)',
                        align: "center", valign: "middle",
                    },
                    {
                        field: 'TotalMoney',
                        title: '@Html.DisplayNameFor(d=>d.TotalMoney)',
                        align: "center", valign: "middle",
                    },
                    @*{
                        field: 'TotalTaxMoney',
                        title: '@Html.DisplayNameFor(d=>d.TotalTaxMoney)',
                        align: "center", valign: "middle",
                    }
                    ,*@
                    {
                        field: 'Transactor',
                        title: '@Html.DisplayNameFor(d=>d.Transactor)',
                        align: "center", valign: "middle",
                    }
                    ,
                    {
                        field: 'OrderDate',
                        title: '@Html.DisplayNameFor(d=>d.OrderDate)',
                        align: "center", valign: "middle",
                        formatter: function(value) {
                          return  moment(value).format("YYYY-MM-DD");
                        }
                    },
                    @*{
                        field: 'Status',
                        title: '@Html.DisplayNameFor(d=>d.Status)',
                        align: "center", valign: "middle",
                        formatter: formatter.businessStatus
                    },*@
                    {
                        field: 'Id',
                        title: '操作',
                        align: "center", valign: "middle",
                        formatter: function (value,row) {
                            return "<a class='btn btn-white btn-sm' href='javascript:;' onclick=\"initDetails('" + value + "');\");'><i class='fa fa-search'></i> 明细 <span class='badge badge-warning'>" + row.OrderDetailCount + "</span></a> " +
                                "<a class='btn btn-success btn-sm' href='@Url.Action("Update")?id=" + value + "');' target='_blank'><i class='fa fa-pencil'></i> 处理订单</a>";
                        }

                    }
                ]
            });
            };

            return obj;
        };
        var ButtonInit = function () {
            var oInit = new Object();
            oInit.Init = function () {
                $("#btn_delete").click(function () {
                    var arrselections = $("#table").bootstrapTable('getSelections');
                    if (arrselections.length > 1) {
                        swal("操作提醒", "只能选择一行进行删除", "warning");
                        return;
                    }
                    if (arrselections.length <= 0) {
                        swal("操作提醒", "请选择有效数据", "warning");
                        return;
                    }

                    swal({
                        title: "您确定吗?",
                        text: "确认要删除选择的数据吗?",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "确定",
                        cancelButtonText: "取消",
                        closeOnConfirm: false,
                        showLoaderOnConfirm: true
                    }, function () {
                        $.ajax({
                            type: "post",
                            headers: {
                                '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                            },
                            url: "@Url.Action("Delete")",
                            data: { "id": arrselections[0].Id },
                            success: function (data) {
                                if (data.State == 1) {
                                    $("#table").bootstrapTable('refresh');
                                    swal({
                                        title: "操作成功",
                                        text: data.Msg,
                                        timer: 2000,
                                        type:"success",
                                        showConfirmButton: false
                                    });

                                } else {
                                    swal("操作提醒", data.Msg, "warning");
                                }
                            },
                            error: function () {
                                swal("操作失败", "系统错误", "error");
                            },
                            complete: function () {

                            }
                        });
                    });
                });
                $("#btn_reset").click(function () {
                    searchFrm.reset($("#searchFrm"));
                });
            };
            return oInit;
        };
        function initDetails(id) {
            $("#modalView").load("@Url.Action("Details")?id="+id,
                function () {
                    $('#modalView .modal').on('shown.bs.modal', function () {
                        $('[data-toggle="tooltip"]').tooltip();
                    }).on('hidden.bs.modal', function () {

                    });
                    $('#modalView .modal').modal('show');
                });

        }
        function upLoadFile() {
            //校验
            var orderName = $("#orderName").val(), linkId = $("#LinkManId").val(), linkname = $("#linkname").val(), tax = $("#tax").val();
            if (!orderName && !linkId) {
                swal("操作失败", "请输入必要的订单信息", "warning");
                return;
            }
            var fileObj = document.getElementById("upfile").files[0]; // js 获取文件对象
            if (typeof (fileObj) == "undefined" || fileObj.size <= 0) {
                swal("操作失败", "请选择文件", "warning");
                return;
            }
            if (!checkFileExt(fileObj.name)) {
                swal("操作失败", "只支持xlsx后缀文件", "warning");
                return;
            }
            var formFile = new FormData();
            formFile.append("Remark", orderName);
            formFile.append("LinkManId", linkId);
            formFile.append("LinkManName", linkname);
            formFile.append("Tax", tax||0);
            formFile.append("upfile", fileObj); //加入文件对象
            var data = formFile;
            var subBtn = $('.ladda-button').ladda();
            $.ajax({
                url: "@Url.Action("ImportOrder")",
                data: data,
                type: "Post",
                dataType: "json",
                headers: {
                    '__RequestVerificationToken': $('@Html.AntiForgeryToken()').val()
                },
                cache: false, //上传文件无需缓存
                processData: false, //用于对data参数进行序列化处理 这里必须false
                contentType: false, //必须
                success: function(result) {
                    if (result.State == 1) {
                        swal({
                            title: "操作成功",
                            text: result.Msg,
                            type: "success"
                        },
                            function() {
                                $("#table").bootstrapTable('refresh');
                                $('#uploadModal').modal('hide'); 
                            });
                    } else {
                        swal("操作失败", result.Msg, "error");
                    }
                },
                error: function() {
                    swal("操作失败", "系统错误", "error");
                },
                beforeSend: function() {
                    subBtn.ladda('start');
                },
                complete: function() {
                    subBtn.ladda('stop');
                }
            });
        }
        function checkFileExt(filename) {
            var flag = false; //状态
            var arr = ["xlsx"];
            //取出上传文件的扩展名
            var index = filename.lastIndexOf(".");
            var ext = filename.substr(index + 1);
            //循环比较
            for (var i = 0; i < arr.length; i++) {
                if (ext == arr[i]) {
                    flag = true; //一旦找到合适的，立即退出循环
                    break;
                }
            }
            return flag;
        }
    </script>
}






